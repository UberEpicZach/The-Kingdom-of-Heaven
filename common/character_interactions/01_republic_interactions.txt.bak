appoint_republic_electee_interaction = {
	category = interaction_category_friendly
	common_interaction = yes
	interface_priority = 60
	desc = appoint_republic_electee_interaction_desc
	
	auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 20
			scope:recipient = {
				AND = {
					age < 60
					has_trait = intellect_good_1
				}
			}
		}
		modifier = {
			add = 30
			scope:recipient = {
				AND = {
					age < 60
					has_trait = intellect_good_2
				}
			}
		}
		modifier = {
			add = 50
			scope:recipient = {
				AND = {
					age < 60
					has_trait = intellect_good_3
				}
			}
		}
	}
	ai_frequency = 60
	
	is_shown = {
		scope:actor = {
			is_ai = no
			is_house_head = yes
			house = {
				has_variable_list = election_candidates
			}
			house = scope:recipient.house
		}
	}
	
	can_send = {
		scope:actor = {
			is_ai = no
		}
		NOT = {
			scope:recipient = scope:actor
		}
	}
	
	
	
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT = { has_trait = incapable }
		}
	}
	
	on_accept = {
		scope:actor = {
			house = {
				clear_variable_list = election_candidates
				add_to_variable_list = {
					name = election_candidates
					target = scope:recipient
				}
			}
		}
	}
}

request_war_interaction = {
	category = interaction_category_diplomacy
	common_interaction = yes
	interface_priority = 70

	desc = request_war_interaction_desc

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:recipient = {
			is_landed = yes
		}
		scope:actor = {
			NOT = {
				is_at_war_with = scope:recipient
			}
			OR = {
				republic_has_senate_form = yes
				republic_has_council_form = yes
			}
			primary_title = {
				OR = {
					exists = var:senate_vote_war_declaration
					exists = var:council_approval_war_declaration
				}
				NOT = {
					any_in_list = {
						variable = valid_war_targets_list
						this = scope:recipient
					}
					any_in_list = {
						variable = proposed_laws_list
						this = flag:proposed_war
					}
				}
			}
		}
		
	}
	
	on_accept = {
		scope:actor = {
			primary_title = {
				add_to_variable_list = {
					name = proposed_laws_list
					target = flag:proposed_war
				}
				set_variable = {
					name = proposed_war_target
					value = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}

request_title_grants_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	interface_priority = 70

	desc = request_title_grants_interaction_desc

	is_shown = {
		scope:recipient = {
			OR = {
				target_is_liege_or_above = scope:actor
				is_pool_guest_of = scope:actor
			}
		}
		scope:actor = {
			NOT = {
				is_at_war_with = scope:recipient
			}
			OR = {
				republic_has_senate_form = yes
				republic_has_council_form = yes
			}
			primary_title = {
				OR = {
					exists = var:senate_vote_title_granting
					exists = var:council_approval_title_granting
				}
				NOT = {
					any_in_list = {
						variable = valid_grant_targets_list
						this = scope:recipient
					}
					any_in_list = {
						variable = proposed_laws_list
						this = flag:proposed_grants
					}
				}
			}
		}
		
	}
	
	on_accept = {
		scope:actor = {
			primary_title = {
				add_to_variable_list = {
					name = proposed_laws_list
					target = flag:proposed_grants
				}
				set_variable = {
					name = proposed_grant_target
					value = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}

request_title_revocation_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	interface_priority = 70

	desc = request_title_revocation_interaction_desc

	is_shown = {
		scope:recipient = {
			is_landed = yes
			# should be shown but be disabled for indirect vassals
			target_is_liege_or_above = scope:actor
			# is_vassal_of = scope:actor
		}

		trigger_if = {
			limit = {
				scope:actor = {
					is_ai = yes
				}
				# No point revoking barons at this time
				scope:recipient.primary_title.tier >= tier_county
			}
		}
		scope:actor = {
			OR = {
				republic_has_senate_form = yes
				republic_has_council_form = yes
			}
			primary_title = {
				OR = {
					exists = var:senate_vote_title_revocation
					exists = var:council_approval_title_revocation
				}
				NOT = {
					any_in_list = {
						variable = valid_revocation_targets_list
						this = scope:recipient
					}
					any_in_list = {
						variable = proposed_laws_list
						this = flag:proposed_revocation
					}
				}
			}
		}
		
	}

	is_valid_showing_failures_only = {
		NOT = { scope:actor = { is_at_war_with = scope:recipient } }
		scope:actor = {
			custom_description = {
				text = "character_interactions_revoke_title_from_ally_without_reason"
				object = scope:recipient
				OR = {
					NOT = {
						is_allied_to = scope:recipient
					}
					has_revoke_title_reason = scope:recipient
				}
			}
			trigger_if = {
				limit = { has_government = tribal_government }
				custom_description = {
					text = "has_law_allowing_title_revocation_tribal"
					has_realm_law_flag = title_revocation_allowed
				}
			}
			trigger_if = {
				limit = {
					NOT = { has_government = tribal_government }
				}
				custom_description = {
					text = "has_law_allowing_title_revocation_crown"
					has_realm_law_flag = title_revocation_allowed
				}
			}
			trigger_if = {
				limit = {
					scope:recipient = {
						vassal_contract_has_flag = vassal_contract_cannot_revoke_titles
					}
				}
				custom_description = {
					text = vassal_contract_forbids_revocation
					scope:recipient = {
						NOT = { vassal_contract_has_flag = vassal_contract_cannot_revoke_titles }
					}
				}
			}
		}
		scope:recipient = {
			is_vassal_of = scope:actor
			is_diplomatically_available = yes
			NOT = { has_strong_hook = scope:actor }
		}
	}
	
	on_accept = {
		scope:actor = {
			primary_title = {
				add_to_variable_list = {
					name = proposed_laws_list
					target = flag:proposed_revocation
				}
				set_variable = {
					name = proposed_revoke_target
					value = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}

request_imprisonment_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	interface_priority = 70

	desc = request_imprisonment_interaction_desc

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:actor = {
			basic_allowed_to_imprison_character_trigger = {
				CHARACTER = scope:recipient
			}
			scope:actor = {
				has_imprisonment_reason = scope:recipient
			}
			OR = {
				republic_has_senate_form = yes
				republic_has_council_form = yes
			}
			primary_title = {
				OR = {
					exists = var:senate_vote_imprisonment_rights
					exists = var:council_approval_imprisonment_rights
				}
				NOT = {
					any_in_list = {
						variable = valid_prison_targets_list
						this = scope:recipient
					}
					any_in_list = {
						variable = proposed_laws_list
						this = flag:proposed_imprisonment
					}
				}
			}
		}
		# Scope:recipient can't be visiting elsewhere.
		trigger_if = {
			limit = {
				scope:recipient = { is_courtier_of = scope:actor }
			}
			NOT = {
				scope:recipient.host = {
					any_foreign_court_guest = { this = scope:recipient }
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			is_diplomatically_available = yes
		}
		scope:actor = {
			allowed_to_imprison_character_trigger = {
				CHARACTER = scope:recipient
			}
		}
		scope:actor = {
			NOT = { has_realm_law = tribal_authority_0 }
		}

		scope:actor = {
			is_imprisoned = no
		}
		custom_description = {
			text = cannot_imprison_almohad_leader
			subject = scope:recipient
			NOT = { scope:recipient = { has_character_modifier = almohad_leader_modifier } }
		}
	}
	
	on_accept = {
		scope:actor = {
			primary_title = {
				add_to_variable_list = {
					name = proposed_laws_list
					target = flag:proposed_imprisonment
				}
				set_variable = {
					name = proposed_prison_target
					value = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}

request_council_appointment_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	interface_priority = 70

	desc = request_council_appointment_interaction_desc

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:actor = {
			OR = {
				republic_has_senate_form = yes
				republic_has_council_form = yes
			}
			primary_title = {
				OR = {
					exists = var:senate_vote_council_appointment
					exists = var:council_approval_council_appointment
				}
				NOT = {
					any_in_list = {
						variable = valid_council_targets_list
						this = scope:recipient
					}
					any_in_list = {
						variable = proposed_laws_list
						this = flag:proposed_council
					}
				}
			}
		}
		scope:recipient = {
			is_capable_adult = yes
			is_imprisoned = no
			is_at_war_with_liege = no
			OR = {
				AND = {
					is_landed = yes
					liege = scope:actor
				}
				AND = {
					is_landed = no
					employer = scope:actor
				}
			}
		}
	}
	
	on_accept = {
		scope:actor = {
			primary_title = {
				add_to_variable_list = {
					name = proposed_laws_list
					target = flag:proposed_council
				}
				set_variable = {
					name = proposed_councilor
					value = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}

hook_house_to_vote_with_you = {
	category = interaction_category_friendly
	common_interaction = yes
	interface_priority = 60
	desc = appoint_republic_electee_interaction_desc
	
	auto_accept = yes
	ai_will_do = {
		base = 0
	}
	
	is_shown = {
		scope:actor = {
			exists = house
			has_usable_hook = scope:recipient
			house = {
				exists = var:titular_republic
				var:titular_republic = {
					save_temporary_scope_as = test_republic_1
				}
			}
			is_house_head = yes
		}
		scope:recipient = {
			exists = house
			house = {
				exists = var:titular_republic
				var:titular_republic = {
					save_temporary_scope_as = test_republic_2
				}
			}
			is_house_head = yes
		}
		scope:test_republic_1 = scope:test_republic_2
	}
	
	can_send = {
		scope:actor = {
			is_ai = no
		}
		NOT = {
			scope:recipient = scope:actor
		}
	}
	
	
	
	is_valid_showing_failures_only = {
		scope:actor = {
			NOT = { has_trait = incapable }
		}
	}
	
	on_accept = {
		scope:actor = {
			use_hook = scope:recipient
			add_to_variable_list = {
				name = blackmailing_house_heads
				target = scope:recipient.house
			}
		}
	}
}