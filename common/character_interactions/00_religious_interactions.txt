
### End Communion tenets ###

#Ask to take the vows to join Holy order
#by Linnéa Thimrén & Bianca Savazzi
#Changed by MyMo
send_to_holy_order_interaction = {
	category = interaction_category_friendly

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	#can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes
	
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }

	desc = send_to_holy_order_interaction_desc

	on_decline_summary = take_vows_decline_summary

	greeting = negative
	notification_text = REQUEST_VOWS_NOTIFICATION_TEXT

	is_shown = {
		scope:recipient = {
			is_courtier_of = scope:actor
			NOR = { 
				has_trait = devoted 
				has_trait = order_member 
			}
		}
		NOT = { #Not your bishop
			scope:actor = {
				any_learning_councillor = { this = scope:recipient }
			}
		}
		scope:actor.faith = {
			any_faith_holy_order = { #Your faith must have a Holy Order
				always = yes
			}
		}
		scope:recipient = {
			NOT = { is_primary_heir_of = scope:actor } ##MYMO
		}
	}
	
	is_valid_showing_failures_only = {

		scope:recipient = {
			#Triggers that applies to both Monastery or Holy Order requirements
			can_take_religious_vows_trigger = yes

			can_be_warrior_trigger = { ARMY_OWNER = scope:recipient }
			custom_description = { 
				text = TAKE_VOWS_INTERACTION_MARTIAL_EDUCATION
				object = scope:recipient
				has_education_martial_trigger = yes
			}
			custom_description = { #At least one Holy Order whose leader you're not a rival of
				text = not_rival_leader_check
				object = scope:recipient
				scope:actor.faith = {
					any_faith_holy_order = {
					leader = {
							NOT = { has_relation_rival = scope:recipient }
						}
					}
				}
			}
		}	
	}
	
	#Use hook
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}

	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	cost = {
		piety = scope:recipient.ask_to_take_vows_piety_cost
	}

	on_send = {
		scope:recipient = {
			set_variable = {
				name = vows_piety_spent
				value = ask_to_take_vows_piety_cost
				days = 10
			}
		}
	}

	on_accept = {
		scope:actor = {
			if = {
				limit = { scope:hook = yes }
				use_hook = scope:recipient
			}

			trigger_event = holy_order.0001
			show_as_tooltip = {
				send_child_to_holy_order_tooltip_effect = yes
				scope:recipient = { kick_from_court_interaction_warning_tooltip_effect = yes }
			}
		}
		hidden_effect = {
			scope:recipient = {
				remove_variable = vows_piety_spent
			}
		}
	}

	on_decline = {
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = asked_me_to_take_vows_opinion
				years = 10
			}
		}
		#Letter event informing the character about the rejection.
		scope:actor = {
			trigger_event = {
				id = religious_interaction.1031
			}
		}

		# Refund piety cost
		show_as_tooltip = {
			scope:actor = {
				add_piety_no_experience = {
					value = scope:recipient.ask_to_take_vows_piety_cost
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					scope:recipient = {
						has_variable = vows_piety_spent
 					}
				}
				scope:actor = {
					add_piety_no_experience = {
						value = scope:recipient.var:vows_piety_spent
 					}
 				}
				scope:recipient = {
					remove_variable = vows_piety_spent
				}
 			}
 		}
 	}

	auto_accept = no

	ai_accept = {
		base = 0 # Try to make it 0 for most interactions

		modifier = { #MYMO debug
			debug_only = yes
			add = 150
		}
		modifier = {
			scope:hook = yes
			add = 50
			desc = SCHEME_WEAK_HOOK_USED
		}
		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.25
			desc = AI_SIMPLE_OPINION_REASON
		}
		modifier = {
			add = ai_zeal
			ai_zeal < 0
			desc = TAKE_THE_VOWS_SKEPTIC
		}
		modifier = {
			add = {
				value = ai_zeal
				divide = 2
			}
			ai_zeal > 0
			desc = TAKE_THE_VOWS_ZEALOUS
		}
		modifier = {
			add = {
				value = ai_zeal
				multiply = ai_boldness
				divide = 100
				min = 10
			}
			ai_zeal > 0
			ai_boldness > 0
			desc = TAKE_THE_VOWS_FIGHT_FOR_FAITH
		}
		modifier = {
			add = {
				value = ai_boldness
			}
			ai_boldness < 0
			desc = TAKE_THE_VOWS_AFRAID_TO_DIE
		}
		modifier = {
			add = {
				value = ai_greed
				multiply = -1
			}
			ai_greed > 0
			desc = TAKE_THE_VOWS_GREED
		}
		modifier = {
			add = 50
			exists = scope:actor.cp:councillor_court_chaplain
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor.cp:councillor_court_chaplain
					has_relation_friend = scope:actor.cp:councillor_court_chaplain
					has_secret_relation_lover = scope:actor.cp:councillor_court_chaplain
					has_relation_soulmate = scope:actor.cp:councillor_court_chaplain
					has_relation_best_friend = scope:actor.cp:councillor_court_chaplain
					opinion = {
						target = scope:actor.cp:councillor_court_chaplain
						value >= very_high_positive_opinion
					}
				}
			}
			desc = TAKE_THE_VOWS_INSPIRING_COURT_CHAPLAIN
		}
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					any_relation = {
						type = friend
						is_clergy = yes
					}
					any_relation = {
						type = best_friend
						is_clergy = yes
					}
					any_relation = {
						type = lover
						is_clergy = yes
					}
					any_relation = {
						type = soulmate
						is_clergy = yes
					}
					any_secret = {
						secret_type = secret_lover
						secret_target = {	
							is_clergy = yes
						}
					}
					##MYMO add
					any_relation = {
						type = friend
						has_government = holy_order_government
					}
					any_relation = {
						type = best_friend
						has_government = holy_order_government
					}
					##
				}
			}
			desc = TAKE_THE_VOWS_INSPIRING_CLERGY
		}
		
		modifier = {
			add = {
				add = 20
				multiply = scope:recipient.num_virtuous_traits
			}
			scope:recipient.num_virtuous_traits > 0
			desc = TAKE_THE_VOWS_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -20
				multiply = scope:recipient.num_sinful_traits
			}
			scope:recipient.num_sinful_traits > 0
			desc = TAKE_THE_VOWS_SINFUL
		}
		modifier = { # Has fought for the faith before
			add = 20
			scope:recipient = {
				has_trait = holy_warrior
			}
			desc = TAKE_THE_VOWS_HOLY_WARRIOR
		}
		
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = temperate
			}
			desc = TAKE_THE_VOWS_TEMPERATE
		}

		modifier = {
			add = 25
			scope:recipient = {
				has_trait = content
			}
			desc = TAKE_THE_VOWS_CONTENT
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = humble
			}
			desc = TAKE_THE_VOWS_HUMBLE
		}

		##MYMO
		modifier = { # MYMO Try to send bastards
			add = 50
			scope:recipient = {
				scope:actor = { faith = { has_doctrine_parameter = bastards_always } }
				has_trait = bastard
			}
			desc = TAKE_THE_VOWS_BASTARD
		}
		modifier = { # MYMO Try to send doubtfull or atifical lineage
			add = 25
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = { faith = { 
							has_doctrine_parameter = bastards_always } }
						OR = {
							has_trait = legitimized_bastard
							has_trait = disputed_heritage 
						}
					}
				}
			}
			desc = TAKE_THE_VOWS_DOUBTFULL
		}
		##MYMO

		#Negative Personality Modifiers
		modifier = {
			add = -500
			scope:recipient = {
				has_trait = pregnant
			}
			desc = TAKE_THE_VOWS_PREGNANT
		}
		modifier = {
			#add = -500
			add = -250 ##MYMO holy order offer some opportunities
			scope:recipient = {
				has_trait = ambitious
			}
			desc = TAKE_THE_VOWS_AMBITIOUS
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				OR = {
					is_married = yes
					exists = betrothed
				}
			}
			desc = TAKE_THE_VOWS_MARRIED_OR_BETROTHED
		}
		
		modifier = {
			add = -150
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
			desc = TAKE_THE_VOWS_PRIMARY_HEIR
		}
		
		modifier = {
			add = -75
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value == 2
				}
			}
			desc = TAKE_THE_VOWS_SECOND_HEIR
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value == 3
				}
			}
			desc = TAKE_THE_VOWS_THIRD_HEIR
		}
		
		modifier = {
			add = -25
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 4
				}
			}
			desc = TAKE_THE_VOWS_HEIR
		}
		
		modifier = {
			add = -100
			scope:recipient = {
				NOT = { is_heir_of = scope:actor }
				any_heir_title = {
					exists = holder
					NOT = {
						holder = scope:actor
					}
					place_in_line_of_succession = {
						target = scope:recipient
						value < 2
					}
				}
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			desc = TAKE_THE_VOWS_HEIR_TO_OTHER_TITLE
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				NOT = { is_heir_of = scope:actor }
				any_heir_title = {
					exists = holder
					NOT = {
						holder = scope:actor
					}
					place_in_line_of_succession = {
						target = scope:recipient
						value < 5
					}
					NOT = {
						place_in_line_of_succession = {
							target = scope:recipient
							value < 2
						}
					}
				}
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			desc = TAKE_THE_VOWS_IN_LINE_TO_OTHER_TITLE
		}
		
		modifier = { #Rivalry modifier.
			desc = offer_vassalization_interaction_aibehavior_rival_tt
			trigger = {
				scope:recipient = {
					has_relation_rival = scope:actor
					NOT = { has_relation_nemesis = scope:actor }
				}
			}
			add = -50
		}
		modifier = { #Nemesis modifier.
			desc = offer_vassalization_interaction_aibehavior_nemesis_tt
			trigger = {
				scope:recipient = {
					has_relation_nemesis = scope:actor
				}
			}
			add = -100
		}
		
		#Dread modifiers
		modifier = {
			add = intimidated_halved_reason_value
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_halved_reason_value
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
	}
	
	# AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = courtiers
		max = 5
	}

	ai_targets = {
		ai_recipients = family
	}
	
	ai_frequency = 72

	ai_will_do = {
		base = 0
		
		modifier = { # The AI will always use a Hook
			scope:hook = yes
			add = 1
		}
		
		modifier = { # Try to send rivals
			add = 100
			scope:actor = {
				OR = {
					has_relation_rival = scope:recipient
					has_relation_nemesis = scope:recipient
				}
			}
		}

		##MYMO
		modifier = { # MYMO Try to send bastards
			add = 50
			scope:recipient = {
				scope:actor = { faith = { has_doctrine_parameter = bastards_always } }
				has_trait = bastard
			}
			desc = TAKE_THE_VOWS_BASTARD
		}
		modifier = { # MYMO Try to send doubtfull or atifical lineage
			add = 25
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = { faith = { 
							has_doctrine_parameter = bastards_always } }
						OR = {
							has_trait = legitimized_bastard
							has_trait = disputed_heritage 
						}
					}
				}
			}
			desc = TAKE_THE_VOWS_DOUBTFULL
		}

		modifier = { # Try to send people who would make poor heirs
			add = 50
			scope:recipient = {
				OR = {
					has_trait = murderer
					has_trait = incestuous
					has_trait = sodomite
					has_trait = cannibal
					has_trait = deviant
					has_trait = kinslayer
					has_trait = adulterer
					has_trait = fornicator
					has_trait = maimed
					has_trait = drunkard
					has_trait = hashishiyah
					has_trait = flagellant
					has_trait = reclusive
					num_of_bad_genetic_traits >= 1
					num_sinful_traits >= 2
				}
				scope:actor.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value <= 7
					}
				}
			}
		}
		
		modifier = { # Try to send people who would make poor heirs
			add = 25
			scope:recipient = {
				is_adult = yes
				calc_true_if = {
					amount >= 3
					
					diplomacy < 8
					stewardship < 8
					martial < 8
					intrigue < 8
					learning < 8
				}
				scope:actor.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value <= 7
					}
				}
			}
		}
		
		modifier = { # Sending one of your heirs is almost customary
			add = 100
			scope:actor = {
				any_child = {
					count >= 3
				}
				NOT = {
					any_child = {
						OR = {
							has_trait = devoted
							has_trait = order_member
						}
					}
				}
			}
			scope:recipient = {
				is_child_of = scope:actor
				has_education_martial_trigger = yes
			}
		}

		##MYMO is holy order founder
		modifier = { 
			add = 50
			faith = {
				any_faith_holy_order = {
					holy_order_patron = scope:actor
				}
			}
		}
		##
		
		modifier = { # Zealous characters generally want to send characters to the Holy Order
			add = 50
			scope:actor = {
				ai_zeal >= high_positive_ai_value
			}
			scope:recipient = {
				has_education_martial_trigger = yes
			}
		}
		
		modifier = { # Greedy characters want to rid their court of potential threats
			add = 50
			scope:actor = {
				ai_greed >= medium_positive_ai_value
				any_child = {
					count >= 1
				}
			}
			scope:recipient = {
				NOT = {
					is_child_of = scope:actor
				}
				any_claim = {
					exists = holder
					holder = scope:actor
				}
			}
		}
		
		modifier = { # The AI doesn't ask married/betrothed people
			factor = 0
			scope:recipient = {
				OR = {
					exists = betrothed
					is_married = yes
				}
			}
		}
		
		modifier = { # Never ask Primary Heir
			factor = 0
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
		}
		
		modifier = { # Only care about family
			factor = 0
			scope:recipient = {
				NOT = {
					is_close_or_extended_family_of = scope:actor
				}
			}
		}
	}
}


#Ask to take the vows for a monastery
#by Linnéa Thimrén & Bianca Savazzi
#Changed by MyMo
take_vows_interaction = {
	category = interaction_category_friendly

	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	#can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes
	
	common_interaction = yes
	cooldown_against_recipient = { years = 10 }

	desc = take_vows_interaction_desc

	on_decline_summary = take_vows_decline_summary

	greeting = negative
	notification_text = REQUEST_VOWS_NOTIFICATION_TEXT

	is_shown = {
		scope:recipient = {
			is_courtier_of = scope:actor
			NOR = { 
				has_trait = devoted 
				has_trait = order_member 
			}
		}
		NOT = { #Not your bishop
			scope:actor = {
				any_learning_councillor = { this = scope:recipient }
			}
		}
		scope:actor.faith = {
			has_doctrine_parameter = take_vows_active # Faith has Monastery order that recipient can be sent to
		}
		scope:recipient = {
			NOT = { is_primary_heir_of = scope:actor } ##MYMO
		}
	}
	
	is_valid_showing_failures_only = {

		scope:recipient = {
			age >= 10
			##MYMO taken from AI will do factor = 0 criterias
			NOR = {
				exists = betrothed
				is_married = yes
			}
			#is_close_or_extended_family_of = scope:actor
			##
			can_take_religious_vows_trigger = yes #Triggers that applies to both Monastery or Holy Order requirements
		}
	}
	
	#Use hook
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = SCHEME_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no

	cost = {
		piety = scope:recipient.ask_to_take_vows_piety_cost
	}

	on_send = {
		scope:recipient = {
			set_variable = {
				name = vows_piety_spent
				value = ask_to_take_vows_piety_cost
				days = 10
 			}
 		}
 	}

	redirect = {
		scope:actor = {
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
		}
	}
	
	##forces to select a court !! if we want women to go to the pool instead
	populate_actor_list = {
		if = {
			limit = {
				scope:recipient = { is_female = yes }
			}
			scope:actor.cp:councillor_court_chaplain = {
				add_to_list = characters
			}
		}
		scope:actor.top_liege = {
			every_vassal_or_below = {
				limit = {
					scope:recipient = { is_male = yes }
					has_government = monastic_government #could filter temples vs monsteries in the future
					faith = scope:actor.faith
				}
				add_to_list = characters
			}
		}
	}
	
	on_accept = {
		scope:actor = {
			if = {
				limit = { scope:hook = yes }
				use_hook = scope:recipient
			}
			
			show_as_tooltip = {
				send_child_to_clergy_effect = yes
			}
			scope:recipient = {
				
				####totoro
				#avoid female joining abbey for real
				#
				#
				#
				#
				#
				#
				#
				
				if = {
					limit = {
						scope:actor.top_liege = {
							any_vassal_or_below = {
								is_male = yes
								has_government = theocracy_government
								primary_title.tier > tier_barony
								faith = scope:actor.faith
							}
						}
					}
					scope:actor.top_liege = {
						random_vassal_or_below = {
							limit = {
							    is_male = yes
								has_government = theocracy_government
								primary_title.tier > tier_barony
								faith = scope:actor.faith
							}
							save_scope_as = theocratic_travel_target
						}
					}
					visit_court_of = scope:theocratic_travel_target
				}
				else_if = {
					limit = {
						exists = scope:actor.capital_province
					}
					move_to_pool_at = scope:actor.capital_province
				}
				kick_from_court_interaction_warning_tooltip_effect = yes
			}
			scope:recipient = {
				custom_tooltip = RENOUNCE_CLAIMS_mymo
				hidden_effect = {
					every_claim = {
						scope:recipient = { remove_claim = prev }
					}
				}
			}
			trigger_event = holy_order.0002
			
			if = {
				limit = {
					exists = scope:secondary_actor
					scope:recipient = { is_male = yes }
				}
				scope:secondary_actor = {
					add_opinion = {
						target = scope:actor
						modifier = pious_opinion
						opinion = 15
					}
				}
			}
			if = {
				limit = {
					exists = cp:councillor_court_chaplain
					scope:recipient = {
						is_close_family_of = scope:actor
					}
				}
				cp:councillor_court_chaplain = {
					add_opinion = {
						target = scope:actor
						modifier = pious_opinion
						opinion = 25
					}
				}
			}
			if = {
				limit = {
					exists = faith.religious_head
					scope:recipient = {
						is_close_family_of = scope:actor
					}
				}
				faith.religious_head = {
					add_opinion = {
						target = scope:actor
						modifier = pious_opinion
						opinion = 10
					}
				}
			}
		}

		hidden_effect = {
			scope:recipient = {
				remove_variable = vows_piety_spent
			}
		}
	}

	on_decline = {
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = asked_me_to_take_vows_opinion
				years = 10
			}
		}
		#Letter event informing the character about the rejection.
		scope:actor = {
			trigger_event = {
				id = religious_interaction.1031
			}
		}

		# Refund piety cost
		show_as_tooltip = {
			scope:actor = {
				add_piety_no_experience = {
					value = scope:recipient.ask_to_take_vows_piety_cost
				}
			}
		}
		# Refund piety cost
		hidden_effect = {
			if = {
				limit = {
					scope:recipient = {
						has_variable = vows_piety_spent
 					}
 				}
				scope:actor = {
					add_piety_no_experience = {
						value = scope:recipient.var:vows_piety_spent
 					}
				}
				scope:recipient = {
					remove_variable = vows_piety_spent
 				}
 			}
 		}
 	}

	auto_accept = no

	ai_accept = {
		base = 0 # Try to make it 0 for most interactions

		#modifier = { #MYMO debug
		#	debug_only = yes
		#	add = 150
		#}
		modifier = {
			scope:hook = yes
			add = 50
			desc = SCHEME_WEAK_HOOK_USED
		}
		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.25
			desc = AI_SIMPLE_OPINION_REASON
		}
		modifier = {
			add = ai_zeal
			ai_zeal < 0
			desc = TAKE_THE_VOWS_SKEPTIC
		}
		modifier = {
			add = {
				value = ai_zeal
				divide = 2
			}
			ai_zeal > 0
			desc = TAKE_THE_VOWS_ZEALOUS
		}
		modifier = {
			add = {
				value = ai_greed
				multiply = -1
			}
			ai_greed > 0
			desc = TAKE_THE_VOWS_GREED
		}
		modifier = {
			add = 50
			scope:recipient = {
				age >= 45
				is_visibly_fertile = no
				NOT = {
					any_heir_title = {
						exists = holder
					}
				}
			}
			desc = TAKE_THE_VOWS_RETIRE_IN_CHURCH
		}
		modifier = {
			add = 50
			exists = scope:actor.cp:councillor_court_chaplain
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor.cp:councillor_court_chaplain
					has_relation_friend = scope:actor.cp:councillor_court_chaplain
					has_secret_relation_lover = scope:actor.cp:councillor_court_chaplain
					has_relation_soulmate = scope:actor.cp:councillor_court_chaplain
					has_relation_best_friend = scope:actor.cp:councillor_court_chaplain
					opinion = {
						target = scope:actor.cp:councillor_court_chaplain
						value >= very_high_positive_opinion
					}
				}
			}
			desc = TAKE_THE_VOWS_INSPIRING_COURT_CHAPLAIN
		}
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					any_relation = {
						type = friend
						is_clergy = yes
					}
					any_relation = {
						type = best_friend
						is_clergy = yes
					}
					any_relation = {
						type = lover
						is_clergy = yes
					}
					any_relation = {
						type = soulmate
						is_clergy = yes
					}
					any_relation = {
						type = crush
						is_clergy = yes
					}
					any_secret = {
						secret_type = secret_lover
						secret_target = {	
							is_clergy = yes
						}
					}
					##MYMO add
					any_relation = {
						type = friend
						has_government = monastic_government
					}
					any_relation = {
						type = best_friend
						has_government = monastic_government
					}
					##
				}
			}
			desc = TAKE_THE_VOWS_INSPIRING_CLERGY
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_education_learning_trigger = yes
			}
			desc = TAKE_THE_VOWS_LEARNING_EDUCATION
		}
		
		modifier = {
			add = {
				add = 20
				multiply = scope:recipient.num_virtuous_traits
			}
			scope:recipient.num_virtuous_traits > 0
			desc = TAKE_THE_VOWS_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -20
				multiply = scope:recipient.num_sinful_traits
			}
			scope:recipient.num_sinful_traits > 0
			desc = TAKE_THE_VOWS_SINFUL
		}

		#Positive Personality Modifiers
		modifier = { # Wants to help people
			add = {
				value = ai_compassion
				divide = 2
			}
			scope:recipient = {
				ai_compassion > 0
				has_trait = lifestyle_physician
			}
			desc = TAKE_THE_VOWS_PHYSICIAN_WANTS_TO_HELP
		}
		modifier = {
			add = 1200
			scope:recipient = {
				has_trait = reclusive
			}
			desc = TAKE_THE_VOWS_RECLUSIVE
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = curious
			}
			desc = TAKE_THE_VOWS_CURIOUS
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = pensive
			}
			desc = TAKE_THE_VOWS_PENSIVE
		}
		modifier = { # Loves books & knowledge!
			add = 20
			scope:recipient = {
				has_trait = lifestyle_mystic
			}
			desc = TAKE_THE_VOWS_MYSTIC
		}
		modifier = { # Loves books & knowledge!
			add = 20
			scope:recipient = {
				has_trait = scholar
			}
			desc = TAKE_THE_VOWS_SCHOLAR
		}
		modifier = { # Loves books & knowledge!
			add = 20
			scope:recipient = {
				has_trait = theologian
			}
			desc = TAKE_THE_VOWS_THEOLOGIAN
		}
		modifier = { # Plants!
			add = 20
			scope:recipient = {
				has_trait = lifestyle_herbalist
			}
			desc = TAKE_THE_VOWS_HERBALIST
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = temperate
			}
			desc = TAKE_THE_VOWS_TEMPERATE
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = celibate
			}
			desc = TAKE_THE_VOWS_CELIBATE
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = chaste
			}
			desc = TAKE_THE_VOWS_CHASTE
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = content
			}
			desc = TAKE_THE_VOWS_CONTENT
		}
		modifier = {
			add = 25
			scope:recipient = {
				has_trait = humble
			}
			desc = TAKE_THE_VOWS_HUMBLE
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = drunkard
			}
			desc = TAKE_THE_VOWS_DRUNKARD
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = hashishiyah
			}
			desc = TAKE_THE_VOWS_HASHISHIYAH
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_trait = trusting
			}
			desc = TAKE_THE_VOWS_TRUSTING
		}
		
		##MYMO
		modifier = { # MYMO Try to send bastards
			add = 50
			scope:recipient = {
				scope:actor = { faith = { has_doctrine_parameter = bastards_always } }
				has_trait = bastard
			}
			desc = TAKE_THE_VOWS_BASTARD
		}
		modifier = { # MYMO Try to send doubtfull or atifical lineage
			add = 25
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = { faith = { 
							has_doctrine_parameter = bastards_always } }
						OR = {
							has_trait = legitimized_bastard
							has_trait = disputed_heritage 
						}
					}
				}
			}
			desc = TAKE_THE_VOWS_DOUBTFULL
		}

		#Negative Personality Modifiers
		modifier = {
			add = -50
			scope:recipient = {
				has_trait = rowdy
			}
			desc = TAKE_THE_VOWS_ROWDY
		}
		modifier = {
			add = -25
			scope:recipient = {
				has_trait = bossy
			}
			desc = TAKE_THE_VOWS_BOSSY
		}
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = gluttonous
			}
			desc = TAKE_THE_VOWS_GLUTTONOUS
		}
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = lustful
			}
			desc = TAKE_THE_VOWS_LUSTFUL
		}
		modifier = {
			add = -500
			scope:recipient = {
				has_trait = pregnant
			}
			desc = TAKE_THE_VOWS_PREGNANT
		}
		modifier = {
			add = -500
			scope:recipient = {
				has_trait = ambitious
			}
			desc = TAKE_THE_VOWS_AMBITIOUS
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				OR = {
					is_married = yes
					exists = betrothed
				}
			}
			desc = TAKE_THE_VOWS_MARRIED_OR_BETROTHED
		}
		
		modifier = {
			add = -150
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
			desc = TAKE_THE_VOWS_PRIMARY_HEIR
		}
		
		modifier = {
			add = -75
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value == 2
				}
			}
			desc = TAKE_THE_VOWS_SECOND_HEIR
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value == 3
				}
			}
			desc = TAKE_THE_VOWS_THIRD_HEIR
		}
		
		modifier = {
			add = -25
			scope:recipient = {
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			scope:actor.primary_title = {
				place_in_line_of_succession = {
					target = prev
					value >= 4
				}
			}
			desc = TAKE_THE_VOWS_HEIR
		}
		
		modifier = {
			add = -100
			scope:recipient = {
				NOT = { is_heir_of = scope:actor }
				any_heir_title = {
					exists = holder
					NOT = {
						holder = scope:actor
					}
					place_in_line_of_succession = {
						target = scope:recipient
						value < 2
					}
				}
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			desc = TAKE_THE_VOWS_HEIR_TO_OTHER_TITLE
		}
		
		modifier = {
			add = -50
			scope:recipient = {
				NOT = { is_heir_of = scope:actor }
				any_heir_title = {
					exists = holder
					NOT = {
						holder = scope:actor
					}
					place_in_line_of_succession = {
						target = scope:recipient
						value < 5
					}
					NOT = {
						place_in_line_of_succession = {
							target = scope:recipient
							value < 2
						}
					}
				}
				NOT = {
					is_primary_heir_of = scope:actor
				}
			}
			desc = TAKE_THE_VOWS_IN_LINE_TO_OTHER_TITLE
		}
		
		modifier = { #Rivalry modifier.
			desc = offer_vassalization_interaction_aibehavior_rival_tt
			trigger = {
				scope:recipient = {
					has_relation_rival = scope:actor
					NOT = { has_relation_nemesis = scope:actor }
				}
			}
			add = -50
		}
		modifier = { #Nemesis modifier.
			desc = offer_vassalization_interaction_aibehavior_nemesis_tt
			trigger = {
				scope:recipient = {
					has_relation_nemesis = scope:actor
				}
			}
			add = -100
		}
		
		#Dread modifiers
		modifier = {
			add = 25
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = 50
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}

		# Culture Tradition modifiers
		
		modifier = {
			add = {
				value = 25
				if = {
					limit = {
						scope:recipient = {
							is_adult = no
							is_child_of = scope:actor
						}
					}
					add = 100
				}
			}
			scope:actor.culture = { has_cultural_parameter = monastic_expectations }
			desc = MONASTIC_EXPECTATIONS_REASON
		}
	}
	
	# AI will do
	
	ai_potential = {
		is_adult = yes
		piety >= major_piety_value
	}
	
	ai_target_quick_trigger = {
		adult = yes
	}

	ai_targets = {
		ai_recipients = courtiers
		max = 5
	}

	ai_targets = {
		ai_recipients = children
	}
	
	ai_frequency = 72

	ai_will_do = {
		base = 0
		
		#MYMO
		#modifier = { # The AI will always use a Hook
		#	scope:hook = yes
		#	add = 1
		#}
		
		modifier = { # Try to send rivals
			add = 100
			scope:actor = {
				OR = {
					has_relation_rival = scope:recipient
					has_relation_nemesis = scope:recipient
				}
			}
		}

		##MYMO
		modifier = { # MYMO Try to send bastards
			add = 50
			scope:recipient = {
				scope:actor = { faith = { has_doctrine_parameter = bastards_always } }
				has_trait = bastard
			}
			desc = TAKE_THE_VOWS_BASTARD
		}
		modifier = { # MYMO Try to send doubtfull or atifical lineage
			add = 25
			scope:recipient = {
				OR = {
					AND = {
						scope:actor = { faith = { 
							has_doctrine_parameter = bastards_always } }
						OR = {
							has_trait = legitimized_bastard
							has_trait = disputed_heritage 
						}
					}
				}
			}
			desc = TAKE_THE_VOWS_DOUBTFULL
		}
		
		modifier = { # Try to send people who would make poor heirs
			add = 50
			scope:recipient = {
				OR = {
					has_trait = murderer
					has_trait = incestuous
					has_trait = sodomite
					has_trait = cannibal
					has_trait = deviant
					has_trait = kinslayer
					has_trait = adulterer
					has_trait = fornicator
					has_trait = maimed
					has_trait = drunkard
					has_trait = hashishiyah
					has_trait = flagellant
					has_trait = reclusive
					num_of_bad_genetic_traits >= 1
					num_sinful_traits >= 2
				}
				scope:actor.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value <= 7
					}
				}
			}
		}
		
		modifier = { # Try to send people who would make poor heirs
			add = 25
			scope:recipient = {
				is_adult = yes
				calc_true_if = {
					amount >= 3
					
					diplomacy < 8
					stewardship < 8
					martial < 8
					intrigue < 8
					learning < 8
				}
				scope:actor.primary_title = {
					place_in_line_of_succession = {
						target = prev
						value <= 7
					}
				}
			}
		}
		
		modifier = { # Sending one of your heirs is almost customary
			add = 100
			scope:actor = {
				any_child = {
					count >= 3
				}
				NOT = {
					any_child = {
						OR = {
							has_trait = devoted
							has_trait = order_member
						}
					}
				}
			}
			scope:recipient = {
				is_child_of = scope:actor
				has_education_learning_trigger = yes
				##MYMO traditionaly send 2nd or 3nd in line
				scope:actor.primary_title = {
					OR = {
						place_in_line_of_succession = {
							target = prev
							value == 2
						}
						place_in_line_of_succession = {
							target = prev
							value == 3
						}
					}
				}
				##
			}
		}
		
		##MYMO is monastery founder
		modifier = { 
			add = 50
			scope:actor = {
				has_character_flag = MYMO_monastery_founder
			}
		}
		
		modifier = { # Zealous characters generally want to send characters to the clergy
			add = 50
			scope:actor = {
				ai_zeal >= high_positive_ai_value
			}
			scope:recipient = {
				has_education_learning_trigger = yes
			}
		}
		
		modifier = { # Greedy characters want to rid their court of potential threats
			add = 50
			scope:actor = {
				ai_greed >= medium_positive_ai_value
				any_child = {
					count >= 1
				}
			}
			scope:recipient = {
				NOT = {
					is_child_of = scope:actor
				}
				any_claim = {
					exists = holder
					holder = scope:actor
				}
			}
		}
		
		modifier = { # The AI doesn't ask married/betrothed people
			factor = 0
			scope:recipient = {
				OR = {
					exists = betrothed
					is_married = yes
				}
			}
		}
		
		modifier = { # Never ask Primary Heir
			factor = 0
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
		}
		
		modifier = { # Only care about family
			factor = 0
			scope:recipient = {
				NOT = {
					is_close_or_extended_family_of = scope:actor
				}
			}
		}
	}
}
##MYMO abdicate = take vows on self

### End Monasticism tenets ###

#########################
# Temporal Condemnation
# by Petter Vilberg
#########################

temporal_condemnation_interaction = {
	category = interaction_category_religion
	desc = temporal_condemnation_interaction_desc

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:actor.faith = {
			has_doctrine_parameter = temporal_condemnation_enabled
		}
		scope:recipient = {
			liege = scope:actor
		}
		scope:recipient = {
			is_landed = yes
		}
	}

	cooldown = { years = 5 }

	is_valid = {
		scope:actor = {
			piety >= medium_piety_value
		}
		custom_description = {
			text = temporal_condemnation_learning_requirement
			subject = scope:actor
			object = scope:recipient
			value = religious_legal_pronouncement_learning_requirement
			religious_legal_pronouncement_requirements >= 0
			scope:actor = { learning >= 1 }
		}
	}

	is_valid_showing_failures_only = {		
		scope:recipient.religion = scope:actor.religion
		custom_description = {
			text = temporal_condemnation_is_not_sinful
			object = scope:recipient
			scope:recipient = {
				num_sinful_traits = { value > 0 faith = scope:actor.faith }
			}
		}
		trigger_if = {
			limit = {
				scope:recipient.num_sinful_traits > 0
				scope:actor.num_sinful_traits > 0
			}
			custom_description = {
				text = temporal_condemnation_less_sinful_than_me
				object = scope:recipient
				scope:actor.num_sinful_traits < scope:recipient.num_sinful_traits
			}
		}
		custom_description = {
			text = temporal_condemnation_has_been_condemned
			object = scope:recipient
			scope:recipient = {
				NOT = {
					has_character_modifier = temporal_condemnation_modifier
				}
			}
		}
		NAND = {
			exists = scope:actor.faith.great_holy_war
			scope:actor.faith.great_holy_war = {
				has_pledged_attacker = scope:recipient
			}
		}
		scope:recipient = {
			is_adult = yes
		}
		scope:recipient = { NOT = { has_strong_hook = scope:actor } }
		scope:recipient = { is_diplomatically_available = yes }
	}

	auto_accept = yes
	force_notification = yes
	notification_text = temporal_condemnation_interaction.notification

	on_accept = {
		scope:actor = {
			add_piety = medium_piety_loss
			add_opinion = {
				target = scope:recipient
				modifier = temporal_condemnation_opinion
				years = 10
			}
			custom_tooltip = temporal_condemnation_revoke_reason
			hidden_effect = {
				send_interface_toast = {	
					title = temporal_condemnation_interaction.tt
					left_icon = scope:recipient
					show_as_tooltip = { custom_tooltip = temporal_condemnation_got_revoke_reason }
				}
			}
			stress_impact = {
				cynical = minor_stress_impact_gain
			}
		}
		scope:recipient = {
			add_character_modifier = {
				modifier = temporal_condemnation_modifier
				years = 15
			}
			add_opinion = {
				target = scope:actor
				modifier = temporal_condemnation_condemned_me_opinion
			}
		}
	}
}

#########################
# Host Honored Guest
# by Sean Hughes
#########################

host_honored_guest_interaction = {
	category = interaction_category_friendly

	desc = host_honored_guest_interaction_desc
	
	ai_targets = {
		ai_recipients = vassals
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 60

	cooldown = { years = 1 }

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:actor = {
			is_landed = yes
			is_adult = yes
			faith = {
				has_doctrine_parameter = host_honored_guests_active
			}
		}
	}

	is_valid_showing_failures_only = {
		# Target faith is Hostile.
		custom_description = {
			text = host_honored_guest_is_hostile
			object = scope:recipient
			NOT = {		
				scope:recipient = {
					faith = {
						faith_hostility_level = {
							target = scope:actor.faith
							value = faith_hostile_level
						}
					}
				}
			}
		}
		# Target faith is Evil.
		custom_description = {
			text = host_honored_guest_is_evil
			object = scope:recipient
			NOT = {		
				scope:recipient = {
					faith = {
						faith_hostility_level = {
							target = scope:actor.faith
							value = faith_evil_level
						}
					}
				}
			}
		}
		# Target is sick
		custom_description = {
			text = host_honored_guest_is_unwell
			object = scope:recipient
			scope:recipient = {
				is_healthy = yes
			}
		}
		# Target is commanding an army
		custom_description = {
			text = host_honored_guest_is_commanding
			object = scope:recipient
			scope:recipient = {
				is_commanding_army = no
			}
		}
		# Target is imprisoned
		custom_description = {
			text = host_honored_guest_is_imprisoned
			object = scope:recipient
			scope:recipient = {
				is_imprisoned = no
			}
		}
		# At war with target
		custom_description = {
			text = host_honored_guest_is_at_war
			object = scope:recipient
			scope:recipient = {
				NOT = { is_at_war_with = scope:actor }
			}
		}
		# Is my courtier
		custom_description = {
			text = host_honored_guest_is_my_courtier
			object = scope:recipient
			scope:recipient = {
				NOT = { is_courtier_of = scope:actor }
			}
		}
	}

	auto_accept = yes
	force_notification = yes
	notification_text = host_honored_guest_interaction.notification
	#answer_accept_key = host_honored_guest_interaction.response

	on_accept = {
		scope:actor = {
			stress_impact = {
				cynical = minor_stress_impact_gain
				shy = minor_stress_impact_gain
			}
		}
		scope:recipient = {
			hidden_effect = {
				send_interface_toast = {	
					title = host_honored_guest_interaction_recipient.notification
					left_icon = scope:actor
				}
			}
			# Spend piety based on recipient's tier.
			if = {
				limit = {
					highest_held_title_tier <= tier_county
				}
				scope:actor = {
					add_piety = minor_piety_loss
				}
			}
			else_if = {
				limit = {
					highest_held_title_tier = tier_duchy
				}
				scope:actor = {
					add_piety = medium_piety_loss
				}
			}
			else_if = {
				limit = {
					highest_held_title_tier = tier_kingdom
				}
				scope:actor = {
					add_piety = major_piety_loss
				}
			}
			else_if = {
				limit = {
					highest_held_title_tier = tier_empire
				}
				scope:actor = {
					add_piety = massive_piety_loss
				}
			}

			# Increase opinion of recipient.
			add_opinion = {
				modifier = pleased_opinion
				target = scope:actor
				opinion = {
					value = 20

					# Zealous characters more likely to appreciate the religious ceremony (if of your faith)
					if = {
						limit = {
							has_trait = zealous
							faith = scope:actor.faith
						}
						add = 10
					}
					# Cynical characters, or characters who do not believe in the hospitality ritual, are less likely to be appreciative.
					else_if = {
						limit = {
							OR = {
								has_trait = cynical
								NOT = {
									faith = {
										has_doctrine_parameter = host_honored_guests_active
									}
								}
							}
						}
						subtract = 10
					}

					# But arrogant characters like it more regardless.
					if = {
						limit = {
							has_trait = arrogant
						}
						add = 10
					}
				}
			}
		}
	}
	
	ai_potential = {
		piety >= major_piety_value
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					is_powerful_vassal_of = scope:actor
					liege = root
				}
				opinion = {
					target = scope:actor
					value = {-15 0 }
				}
			}
		}

		modifier = {
			add = 75
			scope:recipient = {
				OR = {
					is_powerful_vassal_of = scope:actor
					liege = root
				}
				opinion = {
					target = scope:actor
					value = { 0 20 }
				}
			}
		}

		modifier = {
			add = 40
			scope:recipient = {
				OR = {
					is_powerful_vassal_of = scope:actor
					liege = root
				}
				opinion = {
					target = scope:actor
					value = { 20 60 }
				}
			}
		}

		modifier = {
			add = 10
			scope:recipient = {
				OR = {
					is_powerful_vassal_of = scope:actor
					liege = root
				}
				opinion = {
					target = scope:actor
					value = { 60 100 }
				}
			}
		}			
	}	
}

# Spiritual Head of Faith Actions

hof_ask_for_gold_interaction = {
	category = interaction_category_religion

	desc = hof_ask_for_gold_interaction_desc
	
	ai_targets = {
		ai_recipients = head_of_faith
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 24
	
	cooldown_against_recipient = { years = 3 }

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:actor.faith = {
			religious_head = scope:recipient
			has_doctrine = doctrine_spiritual_head
		}
		scope:actor = {
			is_landed = yes
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			gold >= scope:actor.head_of_faith_gold_value
		}
		scope:actor = {
			piety >= major_piety_value
			custom_description = {
				text = "hof_ask_for_gold_excommunicated"
				NOT = { has_trait = excommunicated }
			}
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
				NOT = {
					faith = { has_doctrine = unreformed_faith_doctrine }
				}
			}
		}
		scope:recipient = { is_diplomatically_available = yes }
	}
	
	ai_accept = {
		base = -40

		compare_modifier = {
			value = scope:recipient.gold
			trigger = {
				scope:recipient.gold > 2500
			}
			offset = -2500
			multiplier = 0.1
			max = 50
			desc = ASK_FOR_GOLD_OVERFLOWING_COFFERS
		}
		
		opinion_modifier = {
			opinion_target = scope:actor
			who = scope:recipient
			multiplier = 1
		}
		
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}
		
		modifier = { # Attacking a co-religionist
			add = -50
			desc = I_AM_ATTACKING_A_CORELIGIONIST
			scope:actor = {
				is_at_war = yes
				any_character_war = {
					primary_attacker = scope:actor
					primary_defender.faith = scope:actor.faith
					primary_defender = {
						NOT = {
							has_trait = excommunicated
						}
					}
				}
			}
		}
		
		modifier = { # Offensive holy war/excommunication war
			add = 30
			desc = I_AM_WAGING_AN_OFFENSIVE_HOLY_OR_EXCOMMUNICATION_WAR
			scope:actor = {
				is_at_war = yes
				any_character_war = {
					is_attacker = scope:actor
					OR = {
						using_non_ghw_holy_war_cb_trigger = yes
						using_cb = excommunication_war
					}
				}
			}
		}
		
		modifier = { # Defensive Holy War
			add = 50
			desc = I_AM_DEFENDING_AGAINST_A_HOLY_WAR
			scope:actor = {
				is_at_war = yes
				any_character_war = {
					is_defender = scope:actor
					using_non_ghw_holy_war_cb_trigger = yes
				}
			}
		}
		
		modifier = { # HoF wants the money for themselves!
			add = -20
			desc = THEY_ARE_GREEDY
			scope:recipient = {
				ai_greed >= high_positive_greed
			}
		}
		
		modifier = { # I am rich already
			add = -25
			desc = I_AM_RICH
			scope:actor = {
				gold >= scope:actor.medium_treasury_value
				NOT = {
					gold >= scope:actor.major_treasury_value
				}
			}
		}
		
		modifier = { # I am rich already
			add = -50
			desc = I_AM_RICH
			scope:actor = {
				gold >= scope:actor.major_treasury_value
				NOT = {
					gold >= scope:actor.massive_treasury_value
				}
			}
		}
		
		modifier = { # I am very rich already
			add = -75
			desc = I_AM_RICH
			scope:actor = {
				gold >= scope:actor.massive_treasury_value
			}
		}
		
		modifier = { # I am a Kinslayer
			add = -15
			desc = I_AM_A_KINSLAYER
			scope:actor = {
				has_trait_rank = {
					trait = kinslayer
					rank >= 1
				}
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_SAVIOR
			add = 15
			scope:actor = {
				has_trait = savior
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_DIVINE_BLOOD
			add = 5
			scope:actor = {
				has_trait = divine_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
		
		modifier = { # You are of the same dynasty as the Head of Faith
			add = 5
			desc = YOU_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				dynasty = scope:actor.dynasty
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.dynasty = scope:secondary_recipient.dynasty
				}
			}
		}
		
		modifier = { # You are of the same house as the Head of Faith
			add = 10
			desc = YOU_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				house = scope:actor.house
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.house = scope:secondary_recipient.house
				}
			}
		}
		
		modifier = { # Related to the Head of Faith
			add = 10
			desc = YOU_ARE_MY_RELATIVE
			scope:recipient = {
				OR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
				}
				NOT = { is_child_of = scope:actor }
			}
		}
		
		modifier = { # Parent of the Head of Faith
			add = 25
			desc = YOU_ARE_MY_PARENT
			scope:recipient = {
				is_child_of = scope:actor
			}
		}
		
		modifier = { # Friend of the Head of Faith
			add = 25
			desc = WE_ARE_FRIENDS
			scope:recipient = {
				has_relation_friend = scope:actor
			}
		}
		
		modifier = { # Best Friend of the Head of Faith
			add = 50
			desc = WE_ARE_BEST_FRIENDS
			scope:recipient = {
				has_relation_best_friend = scope:actor
			}
		}
		
		modifier = { # Lover of the Head of Faith
			add = 10
			desc = WE_ARE_LOVERS
			scope:recipient = {
				has_relation_lover = scope:actor
			}
		}
		
		modifier = { # Rival of the Head of Faith
			add = -100
			desc = WE_ARE_RIVALS
			scope:recipient = {
				has_relation_rival = scope:actor
			}
		}
		
		modifier = { # Nemesis of the Head of Faith
			add = -500
			desc = WE_ARE_NEMESES
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.num_virtuous_traits
			}
			scope:actor.num_virtuous_traits > 0
			desc = I_AM_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = 5
				multiply = scope:actor.piety_level
			}
			scope:actor.piety_level > 1
			desc = I_AM_PIOUS
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.piety_level
			}
			scope:actor.piety_level > 2
			scope:actor.gold < 0
			desc = I_AM_PIOUS_AND_BROKE
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.num_sinful_traits
			}
			scope:actor.num_sinful_traits > 0
			desc = I_AM_SINFUL
		}
	}
	
	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:hook = yes
		}
	}
	
	send_option = {
		is_shown = {
			NOT = { scope:actor = scope:recipient }
		}
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook
		localization = GENERIC_SPEND_A_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"

	send_options_exclusive = no
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		hof_ask_for_gold_interaction_effect = yes
		
		scope:actor = {
			trigger_event = religious_interaction.3
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = religious_interaction.32
		}
	}
	
	ai_potential = {
		is_landed = yes
		piety >= major_piety_value
		is_landed = yes
		NOT = { has_trait = excommunicated }
		highest_held_title_tier > tier_barony
		exists = faith.religious_head
	}

	ai_will_do = {
		base = 0
		
		modifier = { # The AI will only use a Hook if they couldn't otherwise do this
			scope:hook = yes
			add = -1
		}

		modifier = { # Counts get a bad 'exchange rate' due to their low income.
			highest_held_title_tier < tier_county 
			scope:recipient.gold < 3000
			add = -50
		}
		modifier = { # Dukes are also somewhat reluctant to request gold if not independent.
			highest_held_title_tier = tier_duchy 
			is_independent_ruler = no
			scope:recipient.gold < 3000
			add = -25
		}

		modifier = { # I am low on money while at war
			add = 300
			scope:actor = {
				is_at_war = yes
				gold < medium_gold_value
			}
		}
		modifier = { # I am in debt
			add = 300
			scope:actor = {
				gold < 0
			}
		}

		modifier = { # Piety to burn, and no reason to keep it.
			add = 25
			scope:actor = {
				piety > massive_piety_value
				NOR = {
					has_character_modifier = vow_of_poverty_modifier
					has_trait = generous
				}
			}
		}
		modifier = { # Or when greedy
			add = scope:actor.ai_greed
			scope:actor = {
				ai_greed > 0
			}
		}
		
		modifier = { # If the Pope has overflowing coffers, it'd be rather impious to NOT ask him to give some to a fellow, poor and struggling christian!
			add = 50
			scope:actor = {
				piety > major_piety_value
			}
			scope:recipient.gold >= 3000
		}
	}
}

hof_ask_for_claim_interaction = {
	category = interaction_category_diplomacy

	desc = hof_ask_for_claim_interaction_desc
	target_type = title
	target_filter = secondary_recipient_domain_titles
	redirect = {
		if = {
			limit = {
				exists = scope:actor.faith.religious_head
			}
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			scope:actor.faith.religious_head = {
				save_scope_as = recipient
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:target = { tier >= tier_county }
	}
	
	is_shown = {
		exists = scope:actor.faith.religious_head
		scope:actor.faith = scope:secondary_recipient.faith
		NOR = {
			scope:actor = scope:secondary_recipient
			scope:secondary_recipient = scope:recipient
		}
		exists = scope:actor.faith.religious_head
		scope:actor.faith = {
			has_doctrine = doctrine_spiritual_head
		}
		scope:secondary_recipient = {
			is_landed = yes
			primary_title = { tier >= tier_county }
			NOT = { has_government = holy_order_government }
		}
	}
	
	is_valid_showing_failures_only = {
		trigger_if = { # Can't request on titles you already have a pressed claim on
			limit = {
				exists = scope:target
				scope:actor = {
					has_strong_claim_on = scope:target
				}
			}
			custom_description = {
				text = "hof_ask_for_claim_has_pressed_claim_already"
				always = no
			}
		}
		trigger_if = { # Can't request claims on baronies
			limit = {
				OR = {
					scope:recipient.highest_held_title_tier = tier_barony
					AND = {
						exists = scope:target
						scope:target = {
							tier = tier_barony
						}
					}
				}
			}
			custom_description = {
				text = "hof_ask_for_claim_no_baronies"
				always = no
			}
		}
		trigger_if = { # Can't request claims on theocratic lessees or theocracies (= Prince-Bishops)
			limit = {
				scope:secondary_recipient = { 
					has_government = theocracy_government
				}
			}
			custom_description = {
				text = "hof_ask_for_claim_theocratic_lessee"
				always = no	
			}	
		}
		scope:actor = { # Variable piety cost depending on tier
			trigger_if = {
				limit = {
					exists = scope:target
				}
				piety >= claim_piety_value
			}
			custom_description = {
				text = "hof_ask_for_claim_excommunicated"
				NOT = { has_trait = excommunicated }
			}
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:actor = {
			custom_description = {
				text = "hof_interaction_unreformed_faith"
				NOT = {
					faith = { has_doctrine = unreformed_faith_doctrine }
				}
			}
		}
		scope:recipient = { is_diplomatically_available = yes }
		scope:secondary_recipient = { NOT = { has_strong_hook = scope:actor } }
	}
	
	ai_accept = {
		base = 0 # Should be 0 for all interactions

		modifier = {
			scope:claim_hook = yes
			add = 100
			desc = SCHEME_WEAK_HOOK_USED
		}
		
		modifier = {
			add = -50
			desc = BASE_RELUCTANCE
		}
		
		modifier = { # Practically impossible to claim Kingdoms/Empires when already King/Emperor
			add = -1000
			desc = I_AM_ALREADY_HIGH_TIER
			scope:actor.primary_title = {
				tier >= tier_kingdom
			}
			scope:target = {
				tier >= tier_kingdom
			}
		}
		
		modifier = { # Characters with a pressed claim on a kingdom or empire already has a reduced chance of getting a claim on a kingdom or empire
			add = -200
			desc = I_ALREADY_HAVE_A_KINGDOM_OR_EMPIRE_CLAIM
			scope:actor = {
				any_claim = {
					pressed = yes
					tier >= tier_kingdom
				}
			}
			scope:target = {
				tier >= tier_kingdom
			}
		}
		
		opinion_modifier = { # More likely if Recipient likes Actor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}
		
		opinion_modifier = { # Unlikely if Recipient likes Secondary Recipient
			who = scope:recipient
			opinion_target = scope:secondary_recipient
			multiplier = -1
			desc = AI_OPINION_REASON
		}
		
		modifier = { # Less likely the lower their tier is compared to you
			add = {
				add = -10
				if = {
					limit = {
						scope:actor = {
							tier_difference = {
								target = scope:secondary_recipient
								value >= 2
							}
						}
					}
					add = -10
				}
				if = {
					limit = {
						scope:actor = {
							tier_difference = {
								target = scope:secondary_recipient
								value >= 3
							}
						}
					}
					add = -10
				}
			}
			desc = THEY_ARE_LOWER_TIER
			scope:actor = {
				tier_difference = {
					target = scope:secondary_recipient
					value >= 1
				}
			}
		}
		
		modifier = { # Penalty for asking claims on your own vassals
			add = -50
			desc = THEY_ARE_YOUR_VASSAL
			scope:actor = {
				any_vassal_or_below = {
					this = scope:secondary_recipient
				}
			}
		}
		
		modifier = { # Bonus for adults to ask on children
			add = 25
			desc = THEY_ARE_A_CHILD
			scope:secondary_recipient = {
				is_adult = no
			}
			scope:actor = {
				is_adult = yes
			}
		}
		
		modifier = { # Penalty for children to ask on adults
			add = -25
			desc = I_AM_A_CHILD
			scope:secondary_recipient = {
				is_adult = yes
			}
			scope:actor = {
				is_adult = no
			}
		}
		
		modifier = { # Bonus for men if a woman under male preference
			add = 15
			desc = THEY_ARE_FEMALE_WHEN_MALE_IS_PREFERRED
			scope:secondary_recipient = {
				is_adult = yes
				is_female = yes
			}
			scope:actor = {
				is_adult = yes
				is_female = no
				faith = {
					has_doctrine = doctrine_gender_male_dominated
				}
			}
		}
		
		modifier = { # Bonus for women if a man under female preference
			add = 15
			desc = THEY_ARE_MALE_WHEN_FEMALE_IS_PREFERRED
			scope:secondary_recipient = {
				is_adult = yes
				is_female = no
			}
			scope:actor = {
				is_adult = yes
				is_female = yes
				faith = {
					has_doctrine = doctrine_gender_female_dominated
				}
			}
		}
		
		modifier = { # Penalty for women to ask claims on men under male preference
			add = -15
			desc = I_AM_FEMALE_WHEN_MALE_IS_PREFERRED
			scope:actor = {
				is_adult = yes
				is_female = yes
				faith = {
					has_doctrine = doctrine_gender_male_dominated
				}
			}
			scope:secondary_recipient = {
				is_adult = yes
				is_female = no
			}
		}
		
		modifier = { # Penalty for men to ask claims on women under female preference
			add = -15
			desc = I_AM_MALE_WHEN_FEMALE_IS_PREFERRED
			scope:actor = {
				is_adult = yes
				is_female = no
				faith = {
					has_doctrine = doctrine_gender_female_dominated
				}
			}
			scope:secondary_recipient = {
				is_adult = yes
				is_female = yes
			}
		}
		
		modifier = { # They are Excommunicated
			add = 25
			desc = THEY_ARE_EXCOMMUNICATED
			scope:secondary_recipient = {
				has_trait = excommunicated
			}
		}
		
		modifier = { # I am a Kinslayer
			add = -15
			desc = I_AM_A_KINSLAYER
			scope:actor = {
				has_trait_rank = {
					trait = kinslayer
					rank >= 1
				}
			}
		}
		
		modifier = { # They are a Kinslayer
			add = 15
			desc = THEY_ARE_A_KINSLAYER
			scope:secondary_recipient = {
				has_trait_rank = {
					trait = kinslayer
					rank >= 1
				}
			}
		}
		
		modifier = { # They are of the same dynasty as the Head of Faith
			add = -5
			desc = THEY_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				dynasty = scope:secondary_recipient.dynasty
				NOR = {
					house = scope:secondary_recipient.house
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor	
					scope:recipient.dynasty = scope:actor.dynasty
				}
			}
		}
		
		modifier = { # You are of the same dynasty as the Head of Faith
			add = 5
			desc = YOU_ARE_MY_DYNASTY_MEMBER
			scope:recipient = {
				is_lowborn = no
				dynasty = scope:actor.dynasty
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.dynasty = scope:secondary_recipient.dynasty
				}
			}
		}
		
		modifier = { # They are of the same house as the Head of Faith
			add = -10
			desc = THEY_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				house = scope:secondary_recipient.house
				NOR = {
					house = scope:actor.house
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor	
					scope:recipient.house = scope:actor.house
				}
			}
		}
		
		modifier = { # You are of the same house as the Head of Faith
			add = 10
			desc = YOU_ARE_MY_HOUSE_MEMBER
			scope:recipient = {
				is_lowborn = no
				house = scope:actor.house
				NOR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
					is_child_of = scope:actor
					scope:recipient.house = scope:secondary_recipient.house
				}
			}
		}
		
		modifier = { # Related to the Head of Faith
			add = 25
			desc = YOU_ARE_MY_RELATIVE
			scope:recipient = {
				OR = {
					is_close_or_extended_family_of = scope:actor
					is_cousin_of = scope:actor
				}
				NOT = { is_child_of = scope:actor }
			}
		}
		
		modifier = { # Parent of the Head of Faith
			add = 50
			desc = YOU_ARE_MY_PARENT
			scope:recipient = {
				is_child_of = scope:actor
			}
		}
		
		modifier = { # Friend of the Head of Faith
			add = 15
			desc = WE_ARE_FRIENDS
			scope:recipient = {
				has_relation_friend = scope:actor
			}
		}
		
		modifier = { # Best Friend of the Head of Faith
			add = 20
			desc = WE_ARE_BEST_FRIENDS
			scope:recipient = {
				has_relation_best_friend = scope:actor
			}
		}
		
		modifier = { # Lover of the Head of Faith
			add = 10
			desc = WE_ARE_LOVERS
			scope:recipient = {
				has_relation_lover = scope:actor
			}
		}
		
		modifier = { # Rival of the Head of Faith
			add = -100
			desc = WE_ARE_RIVALS
			scope:recipient = {
				has_relation_rival = scope:actor
			}
		}
		
		modifier = { # Nemesis of the Head of Faith
			add = -500
			desc = WE_ARE_NEMESES
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:actor.num_virtuous_traits
			}
			scope:actor.num_virtuous_traits > 0
			desc = I_AM_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:secondary_recipient.num_virtuous_traits
			}
			scope:secondary_recipient.num_virtuous_traits > 0
			desc = THEY_ARE_VIRTUOUS
		}
		
		modifier = {
			add = {
				add = -10
				multiply = scope:actor.num_sinful_traits
			}
			scope:actor.num_sinful_traits > 0
			desc = I_AM_SINFUL
		}
		
		modifier = {
			add = {
				add = 10
				multiply = scope:secondary_recipient.num_sinful_traits
			}
			scope:secondary_recipient.num_sinful_traits > 0
			desc = THEY_ARE_SINFUL
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_SAVIOR
			add = 15
			scope:actor = {
				has_trait = savior
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_DIVINE_BLOOD
			add = 5
			scope:actor = {
				has_trait = divine_blood
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_PARAGON
			add = 15
			scope:actor = {
				has_trait = paragon
			}
		}
		modifier = {
			desc = RELIGIOUS_HEAD_INTERACTION_CONSECRATED_BLOOD
			add = 5
			scope:actor = {
				has_trait = consecrated_blood
			}
		}
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			scope:claim_hook = yes
			scope:actor = { has_strong_hook = scope:recipient }
		}
	}

	
	send_option = {
		is_shown = {
			NOT = { scope:actor = scope:recipient }
		}
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = claim_hook
		localization = GENERIC_SPEND_A_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	
	send_options_exclusive = no
	
	ai_min_reply_days = 1
	ai_max_reply_days = 5
	
	on_accept = {
		hof_ask_for_claim_interaction_effect = yes
		scope:secondary_recipient = {
			trigger_event = religious_interaction.5
		}
		scope:actor = {
			trigger_event = religious_interaction.4
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = religious_interaction.42
		}
	}
}

#This interaction is referenced in code! If it's renamed you have to ping a coder
hof_redirect_great_holy_war_interaction = {
	hidden = yes
	
	target_type = title
	target_filter = secondary_recipient_de_jure_titles
	redirect = {
		scope:recipient = {
			save_scope_as = secondary_recipient
		}
		scope:actor.faith.religious_head = {
			save_scope_as = recipient
		}
	}
	
	auto_accept = yes
	
	is_shown = {
		#exists = scope:actor.faith.religious_head #Called by Autonomous Faiths too.
		exists = scope:actor.faith.great_holy_war
		scope:actor.faith = { is_hostile_enough_for_holy_war_trigger = { FAITH = scope:secondary_recipient.faith } }
		scope:secondary_recipient = { is_independent_ruler = yes }
		NOT = { exists = scope:actor.faith.great_holy_war.ghw_war }
		NOT = { scope:target = scope:actor.faith.great_holy_war.ghw_target_title } #Do not show the title already targeted in the list.
	}

	can_be_picked_title = {
		scope:target.tier = tier_kingdom
		NOT = { scope:target = scope:actor.faith.great_holy_war.ghw_target_title } #Do not show the title already targeted in the list.
	}
	
	is_valid_showing_failures_only = {
		scope:actor = { piety >= faith.great_holy_war.var:redirect_cost }
		scope:actor.faith.great_holy_war = { days_until_ghw_launch >= 100 } #No last minute changes.
		scope:recipient = { is_diplomatically_available = yes }
	}
	
	has_valid_target_showing_failures_only = {
		exists = scope:target
		scope:target.tier = tier_kingdom
		NOT = { scope:target = scope:actor.faith.great_holy_war.ghw_target_title } #Do not show the title already targeted in the list.
	}
	
	cost = {
		piety = scope:actor.faith.great_holy_war.var:redirect_cost
	}
	
	on_accept = {
		scope:actor.faith.great_holy_war = {
			#Toast for attackers
			every_pledged_attacker = {
				limit = {
					is_ai = no
				}
				send_interface_toast = {
					title = hof_redirected_ghw.0001.desc
					left_icon = scope:actor
					right_icon = scope:secondary_recipient
				}
			}
			#Event for former defenders.
			every_pledged_defender = {
				limit = {
					is_ai = no
				}
				add_to_temporary_list = former_defenders
			}
		}
		scope:actor = {
			faith.great_holy_war = {
				save_scope_as = the_ghw
				set_great_holy_war_target = { target_character = scope:secondary_recipient target_title = scope:target }
				#Old defenders that are no longer in the area are notified.
				every_in_list = {
					list = former_defenders
					limit = {
						is_ai = no
						NOT = {
							scope:actor.faith.great_holy_war = { has_pledged_defender = prev }
						}
					}
					trigger_event = great_holy_war.0081
				}
				#New defenders are notified.
				every_pledged_defender = {
					limit = {
						is_ai = no
					}
					trigger_event = { id = great_holy_war.0082 }
				}
				change_variable = {
					name = redirect_cost
					multiply = 2
				}
				set_variable = {
					name = last_redirector
					value = scope:actor
				}
			}
			hidden_effect = {
				scope:actor.faith = { save_scope_as = the_faith }
				scope:target = { save_scope_as = target_kingdom }
				scope:secondary_recipient = {
					save_scope_as = target_character
					faith = { save_scope_as = target_faith }
				}
				every_ruler = { #Defenders Pledge to the Crusade again. (AI only)
					limit = {
						faith = scope:target_character.faith
						is_ai = yes
						is_landed = yes
						highest_held_title_tier >= tier_county
						NOT = {
							scope:actor.faith.great_holy_war = { has_pledged_defender = prev }
						}
					}
					trigger_event = { id = great_holy_war.0021 days = { 25 150 } } #AI counterpledging. Unlike attackers, defenders should be selected much faster during the preparation phase and then stop.
				}
				scope:target_character = {
					faith = {
						every_faith_holy_order = {
							trigger_event = { id = great_holy_war.0091 days = { 25 60 } } #Holy order counterpledging
						}
					}
				}
				scope:actor.faith.great_holy_war = { #Recalculate Recipient.
					faith = { save_scope_as = the_faith }
					ghw_target_title = { save_scope_as = target_kingdom }
					if = { #If Pope died in the meantime.
						limit = {
							OR = {
								NOT = {
									exists = scope:the_faith.great_holy_war.ghw_war_declarer
								}
								NOT = {
									scope:the_faith.great_holy_war.ghw_war_declarer = { is_alive = yes }
								}
							}
						}
						scope:the_faith = { ghw_set_new_war_declarer_effect = yes }
					}
					scope:the_faith.great_holy_war.ghw_war_declarer = { save_scope_as = ghw_sponsor }
					#Check and set sponsor if needed.
					undirected_ghw_recipient_selection_effect = yes
				}
			}
		}
	}
	ai_will_do = {
		base = 0
	}
}

select_ghw_beneficiary_interaction = {
	category = interaction_category_religion

	
	populate_recipient_list = {
		scope:recipient = {
			#Any member of your own house.
			house = {
				every_house_member = {
					add_to_list = characters
				}
			}
			#Any nearby family member who is of your dynasty, even if they're a separate house.
			every_close_or_extended_family_member = {
				limit = {
					dynasty = scope:recipient.dynasty
					NOT = { house = scope:recipient.house }
				}
				add_to_list = characters
			}
			#And then any landless heads of minor houses in your dynasty.
			dynasty = {
				every_dynasty_member = {
					limit = {
						this = this.house.house_head
						NOR = {
							this.house = scope:recipient.house
							any_close_or_extended_family_member = { this = scope:recipient }
						}
						is_ruler = no
					}
					add_to_list = characters
				}
			}
		}
	}
	
	auto_accept = yes
	
	is_shown = {
		exists = scope:actor.faith.great_holy_war
		scope:actor = {
			exists = faith.great_holy_war
			this = scope:recipient
			is_pledged_ghw_attacker = yes
		}
		NOT = { scope:actor = scope:recipient.faith.great_holy_war.ghw_war_declarer } #Not for the Caliph himself.
	}
	
	can_be_picked = {
		is_adult = yes
		is_ruler = no
		faith = scope:actor.faith
		NOT = {
			any_heir_title = {} # Not heir to anything
		}
		OR = { #Either not married, or not married to a ruler.
			is_married = no
			NOT = {
				any_spouse = {
					is_ruler = yes
				}
			}
		}
	}

	has_valid_target_showing_failures_only = {
		scope:secondary_recipient = {
			NOR = {
				has_trait = excommunicated
				has_trait = incapable
				has_trait = devoted
				has_serious_disease_trigger = yes
				custom_description = {
					text = "ghw_recipient_must_not_be_realm_priest"
					faith = {
						has_doctrine = doctrine_theocracy_temporal
					}
					has_council_position = councillor_court_chaplain
				}
			}
			faith = scope:actor.faith
			is_adult = yes
			is_ruler = no
			NOT = {
				any_heir_title = {} # Not heir to anything
			}
			OR = { #Either not married, or not married to a ruler.
				is_married = no
				NOT = {
					any_spouse = {
						is_ruler = yes
					}
				}
			}
		}
		scope:recipient = { is_diplomatically_available = yes }
	}
	
	on_accept = {
		scope:actor = {
			send_interface_toast = {
				title = select_ghw_beneficiary_interaction_notification

				right_icon = scope:secondary_recipient

				set_beneficiary = scope:secondary_recipient
			}
		}
	}
	ai_will_do = {
		base = 0 #Assigned directly by event for the AI.
	}
}

sun_trial_interaction = {
	interface_priority = 30

	category = interaction_category_prison

	is_shown = {
		scope:actor = { faith = { has_doctrine_parameter = trial_by_sun_active } }
		scope:recipient = {
			is_imprisoned_by = scope:actor
			is_adult = yes
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			has_imprisonment_reason = scope:recipient
		}
	}


	on_accept = {
		scope:actor = {
			save_scope_as = imprisoner
			
			sun_trial_interaction_piety_effect = yes
		}

		scope:recipient = {
			save_scope_as = prisoner
			show_as_tooltip = {
				#Prisoner has a random outcome (toast sent through prisoner's events)
				random_list = {
					desc = outcome_in_a_few_days
					50 = { #they die without consequences! (must match event religious_interaction.2100)
						sun_trial_death_modifier = yes
						desc = sun_trial_interaction.success.tt
						sun_trial_death_effect = yes
					}
					50 = { #they are freed and super cool! (must match event religious_interaction.2100)
						sun_trial_survival_modifier = yes
						desc = sun_trial_interaction.failure.tt
						sun_trial_survival_effect = yes
					}
				}
			}
			hidden_effect = { #Nudge towards rivalry
				if = {
					limit = {
						NOR = {
							has_relation_rival = scope:actor
							has_relation_potential_rival = scope:actor
						}
					}
					set_relation_potential_rival = scope:actor
				}
			}
			#Event for outcome
			trigger_event = {
				id = religious_interaction.2100
			}
		}
	}

	auto_accept = yes
}

#########################
# Literalism tenets
# by Ewan Cowhig Croft
#########################

#Engage in literalist debate.
#by Ewan Cowhig Croft
literalist_debate_interaction = {
	category = interaction_category_religion
	desc = literalist_debate_interaction_desc

	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:actor.faith = {
			has_doctrine_parameter = literalist_debate_enabled
		}
		scope:recipient = {
			is_landed = yes
			OR = {
				liege = scope:actor	#You may debate direct vassals.
				liege = scope:actor.liege	#You may debate vassals with whom you share a liege.
				scope:actor.liege = scope:recipient	#You may debate your direct liege.
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			is_adult = yes
		}
		scope:recipient = {
			faith = scope:actor.faith
		}
		custom_description = {
			text = literalist_debate_interaction_has_been_debated
			object = scope:recipient
			scope:recipient = {
				NOT = { has_character_modifier = used_literalist_debate_modifier } #To prevent back and forth & back-to-back challenges
				NOT = { has_character_modifier = literally_debated_modifier }
			}
		}
		custom_description = {
			text = literalist_debate_timing
			scope:actor = {
				NOT = { has_character_modifier = used_literalist_debate_modifier }
			}
		}
		scope:recipient = {
			is_adult = yes
		}
		scope:recipient = {
			NOT = { has_strong_hook = scope:actor }
		}
		scope:recipient = { is_diplomatically_available = yes }
		scope:actor = {
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
	}

	auto_accept = yes

	on_accept = {
		hidden_effect = {
			scope:actor = {
				add_character_modifier = {
					modifier = used_literalist_debate_modifier
					years = 2
				}
			}
			scope:recipient = {
				trigger_event = { id = religious_interaction.2400 }
				add_character_modifier = {
					modifier = literally_debated_modifier
					years = 10
				}
			}
		}
		custom_tooltip = literalist_debate_interaction.tt_modifiers
		scope:actor = {
			stress_impact = {
				cynical = minor_stress_impact_gain
			}
			custom_tooltip = literalist_debate_interaction.tt_winnings_actor
		}
		scope:recipient = {
			custom_tooltip = literalist_debate_interaction.tt_winnings_recipient
		}
	}
}