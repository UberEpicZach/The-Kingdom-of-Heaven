@ruler_share_top_opinion_from_lessee = 50

# Definition of lease used for organized churches. Required for the game to run.
theocracy_lease = {
	hierarchy = { # hierarchy definition is required
		ruler_valid = {
			faith = { has_doctrine = doctrine_theocracy_temporal }
			NOT = { has_government = theocracy_government }
		}
		liege_or_vassal_valid = {
			faith = scope:target.faith
		}
		lessee = cp:councillor_court_chaplain	# should be a councillor

		barony_valid = {
			title_province = { has_holding_type = church_holding }
		}
	}

	government = theocracy_government
	valid_holdings = { church_holding }

	ruler_share_min_opinion_from_lessee = 1
	hook_strength_max_opinion = strong

	tax = {
		lease_liege = 50 #ex 25 #changed to compensate less church_holding
		rest = {
			max = 25 #ex 50  # when updating the weights also update this value. It is used in the tooltip and should be the maximin posible weight
			weight = {
				base = 0
				modifier = {
					add = 50
					scope:ruler = {
						has_strong_hook = scope:lessee
					}
				}
				opinion_modifier = { # Opinion Factor
					min = 0
					#max = 50 #MYMO
					who = scope:lessee
					opinion_target = scope:ruler
					trigger = {
						NOT = {
							scope:ruler = {
								has_strong_hook = scope:lessee
							}
						}
					}
					multiplier = {
						value = 50
						divide = @ruler_share_top_opinion_from_lessee
					}
				}
			}
		}
	}

	levy = {
		lease_liege = 15
		rest = {
			max = 100  # when updating the weights also update this value. It is used in the tooltip and should be the maximin posible weight
			weight = {
				base = 0
				modifier = {
					add = 100
					scope:ruler = {
						has_strong_hook = scope:lessee
					}
				}
				opinion_modifier = { # Opinion Factor
					min = 0
					max = 100
					who = scope:lessee
					opinion_target = scope:ruler
					trigger = {
						NOT = {
							scope:ruler = {
								has_strong_hook = scope:lessee
							}
						}
					}
					multiplier = {
						value = 100
						divide = @ruler_share_top_opinion_from_lessee
					}
				}
			}
		}
	}
}
