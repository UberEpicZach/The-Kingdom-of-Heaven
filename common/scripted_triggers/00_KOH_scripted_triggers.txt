

# ###REQUIRED YEAR TRIGGER
# required_year_trigger = {
# 	custom_description = {
# 		text = required_year
# 		value = $YEAR$
# 		current_year = $YEAR$
# 	}
# }
# required_year_greater_or_equal_trigger = {
# 	custom_description = {
# 		text = required_year_greater_or_equal
# 		value = $YEAR$
# 		current_year >= $YEAR$
# 	}
# }

# required_year_lesser_or_equal_trigger = {
# 	custom_description = {
# 		text = required_year_lesser_or_equal
# 		value = $YEAR$
# 		current_year <= $YEAR$
# 	}
# }


# is_ranchy_woman_in_my_dungeon = {
# 	 character:205730 = {
# 		is_imprisoned_by = character:204500
# 	 }
# }


familytrigger = {
	is_male = yes
	is_ruler = no
	root.primary_title = {
		place_in_line_of_succession = {
		  target = PREV
		  value > 2
		}
	}
}


is_sea = {
    exists = commanding_army.location
	commanding_army.location = {
		NOR = {
			terrain = plains
			terrain = farmlands
			terrain = hills
			terrain = mountains
			terrain = desert
			terrain = desert_mountains
			terrain = oasis
			terrain = jungle
			terrain = forest
			terrain = taiga
			terrain = wetlands
			terrain = steppe
			terrain = floodplains
			terrain = drylands 
		}
	}
}


wifelover = {
	exists = {
		any_relation = {
			type = lover 
		}
	}
	exists = primary_spouse.location
	
	any_relation = {
		type = lover 
		location = primary_spouse.location
	}
}

has_vice_trigger = {
	OR = {
		has_trait = lustful
		has_trait = gluttonous
		has_trait = greedy
		has_trait = lazy
		has_trait = wrathful
		has_trait = callous 
		has_trait = arrogant 
	}
}

has_benevolent_trait_trigger = {
	OR = {
		has_trait = just
		has_trait = compassionate 
		has_trait = generous
		has_trait = patient
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		has_trait = theologian
		has_trait = celibate
		has_trait = chaste
		has_trait = humble
		has_trait = content
		has_trait = pilgrim
		has_trait = monk
		has_trait = shieldmaiden
		has_trait = zealous
	}
}

has_impious_trait_trigger = {
	OR = {
		has_trait = lifestyle_reveler
		has_trait = lustful
		has_trait = cannibal
		has_perk = schemer_perk
		has_perk = seducer_perk
		has_perk = torturer_perk
		
	}
}

has_virtue_trigger = {
	OR = {
		has_trait = chaste
		has_trait = temperate
		has_trait = generous
		has_trait = diligent
		has_trait = patient
		has_trait = compassionate
		has_trait = humble
	}
}

assassins_mongol_trigger_koh = {
    NOT = { exists = global_var:mongols_provoke_assassins }
    exists = title:d_hashshashin.holder
    title:d_hashshashin.holder = {
        has_government = holy_order_county_government
    }
	OR = {
		AND = {
			exists = title:e_mongol_empire
			character_is_realm_neighbor = title:e_mongol_empire.holder
		}
		AND = {
			exists = title:e_ilkhanate
			character_is_realm_neighbor = title:e_ilkhanate.holder
		}
	}
}

assassins_ayyubid_trigger_koh = {
    NOT = { exists = global_var:ayyubids_provoke_assassins }
    exists = title:d_hashshashin.holder
    title:d_hashshashin.holder = {
        has_government = holy_order_county_government
    }
	OR = {
		AND = {
			exists = title:e_arabia
			character_is_realm_neighbor = title:e_arabia.holder
		}
		AND = {
			exists = title:k_syria
			character_is_realm_neighbor = title:k_syria.holder
		}
	}
}

sainthood_event1trigger = {
	NOR = {
		has_trait = excommunicated
		has_trait = drunkard
		has_trait = lifestyle_reveler
		has_trait = cannibal
		#controls_religion = yes
		has_faith = faith:waldensian
		has_trait = kinslayer
	}

	NOT =  { has_claim_on  =  title:k_papal_state } # Antipopes

	OR = {
		AND = {
			highest_held_title_tier = tier_empire
			piety >= 1250
		}

		AND = {
			highest_held_title_tier = tier_kingdom
			piety >= 1000
		}
		AND = {
			highest_held_title_tier = tier_duchy
			piety >= 750
		}
		AND = {
			highest_held_title_tier = tier_county
			piety >= 500
		}
	}
	has_vice_trigger = no
	has_benevolent_trait_trigger = yes
	has_virtue_trigger = yes
	is_adult = yes
}

KoH_is_loaded = {
	always = yes
}

martyrs_death_trigger = {
	death_reason = death_sacrificed_to_gods
}

vassal_trigger = {
	any_vassal = {
		limit = {
			save_temporary_scope_as = tmp_vassal
			any_claim = {
				explicit = yes # Whichever
				pressed = no # Whichever
				tier = tier_county
				is_neighbor_to_realm = scope:tmp_vassal
				holder.liege = prev.liege
				save_temporary_scope_as = tmp_county
			}
		}
		save_temporary_scope_as = vassal_1
		random_claim = {
			explicit = yes # Whichever
			pressed = no # Whichever
			tier = tier_county
			is_neighbor_to_realm = scope:vassal_1
			holder.liege = scope:vassal_1.liege
			save_scope_as = county
			holder = {save_temporary_scope_as = vassal_2}
		}
	}
}