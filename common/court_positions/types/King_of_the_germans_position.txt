# COURT POSITIONS
# Co-Emperor
# Despot? (Future addition)
# Sebastokrator? (Positions Expanded or this mod?)

King_of_the_germans_court_position = {
	skill = martial
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = empire

	opinion = {
		value = King_of_the_germans_court_position_opinion 
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }
	
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = King_of_the_germans_court_position_aptitude_value
	}
	
	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_title = title:e_hre
	}
	
	is_shown_character = {
		is_shown_character_King_of_the_germans_candidate = yes
	}

	# Is this a valid position for this character? Also checks the scripted rule "is_eligible_for_court_positions" in code. (root is potential position holder)
	valid_character = {
		scope:employee = {
			is_shown_character_King_of_the_germans_candidate = yes
		}
	}
	
	revoke_cost = {
		prestige = King_of_the_germans_court_position_prestige_revoke_cost
	}
	
	salary = {
		round = no
		prestige = major_court_position_salary  
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		aptitude_level_1 = {
			vassal_opinion = -15
			stress_gain_mult = 0.2
		}
		aptitude_level_2 = {
			vassal_opinion = -10
			stress_gain_mult = 0.1
		}
		aptitude_level_3 = {
			vassal_opinion = 0
			stress_gain_mult = 0
		}
		aptitude_level_4 = {
			vassal_opinion = 5
			stress_gain_mult = -0.1
		}
		aptitude_level_5 = {
			vassal_opinion = 10
			stress_gain_mult = -0.2
		}
	}
		
	modifier = {
		monthly_prestige = King_of_the_germans_court_position_prestige_salary
		fellow_vassal_opinion = 15
		hostile_scheme_resistance_add = 20

	}
	
	on_court_position_received = {
		basic_gained_court_position_effect = yes
		King_of_the_germans_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		King_of_the_germans_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		King_of_the_germans_invalidated_court_position_effect = yes
	}
	candidate_score = {
		value = King_of_the_germans_court_position_candidate_score_value
	}
}
Nagid_court_position = {
	skill = stewardship
	max_available_positions = 1
	category = court_position_category_special
	minimum_rank = kingdom

	opinion = {
		value = regular_court_position_opinion 
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }
	
	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		add = {
			value = stewardship
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
	}
	
	# Is this an available position for this court? (root is court owner)
	is_shown = {
		has_title = title:e_arabia
	}
	


	# Is this a valid position for this character? Also checks the scripted rule "is_eligible_for_court_positions" in code. (root is potential position holder)
	valid_character = {
		scope:employee = {
		has_religion = religion:judaism_religion
			is_imprisoned = no
			
		}
	}
	
	revoke_cost = {
		prestige = King_of_the_germans_court_position_prestige_revoke_cost
	}
	
		
	salary = {
		round = no
		gold = {
			value = minor_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = cultural_emissary_court_position
						any_court_position_holder = {
					        type = cultural_emissary_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		 
				aptitude_level_1 = {
		  	monthly_county_control_change_add = 0.1
		}
		aptitude_level_2 = {
		  	monthly_county_control_change_add = 0.1
		}
		aptitude_level_3 = {
		  	monthly_county_control_change_add = 0.2
		}
		aptitude_level_4 = {
		  	monthly_county_control_change_add = 0.2
		}
		aptitude_level_5 = {
		  	monthly_county_control_change_add = 0.3
		}
	
	}
		
		modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		basic_gained_court_position_effect = yes
	}
	on_court_position_revoked = {
		basic_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		basic_invalidated_court_position_effect = yes
	}
	candidate_score = {
		value = 100
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value
		add = court_position_debt_considerations_value
	}
}