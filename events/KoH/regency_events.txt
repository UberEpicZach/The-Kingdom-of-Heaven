namespace = regency

regency.001 = {
	type = character_event
	hidden = yes
	trigger = {
		has_government = feudal_government
	}
	immediate = {
		save_scope_as = invalid_ruler
		hidden_effect = {
			every_parent = {
				limit = {is_alive = yes}
				add_to_list = regent_candidates
			}
			every_vassal = {
				limit = { 
					age > 16 
					has_government = feudal_government
				}
				add_to_list = regent_candidates
			}
			every_courtier = {
				limit = { age > 16 }
				add_to_list = regent_candidates
			}
			every_heir = {
				limit = { age > 16 }
				if = {
					limit = {
						is_ruler = yes
						exists = liege
						liege = scope:invalid_ruler
					}
					add_to_list = regent_candidates
				}
				else_if = {
					limit = {is_ruler = no}
					add_to_list = regent_candidates
				}
			}
			random_in_list = {
				list = regent_candidates
				limit = { has_relation_guardian = scope:invalid_ruler }
				alternative_limit = {is_parent_of = scope:invalid_ruler}
				alternative_limit = {is_heir_of = scope:invalid_ruler}
				alternative_limit = {is_powerful_vassal_of = scope:invalid_ruler}
				alternative_limit = {is_vassal_of = scope:invalid_ruler}
				alternative_limit = {is_courtier_of = scope:invalid_ruler}
				add_character_flag = is_assigned_regent
				clear_variable_list = regent_assigned_to
				set_variable = { name = regent_assigned_to value = scope:invalid_ruler }
				if = {
					limit = {scope:invalid_ruler = { age < 16 } }
					set_relation_ward = scope:invalid_ruler
				}
				if = {
					limit = {
						is_ruler = no
						NOT = {
							employer = scope:invalid_ruler
						}
					}
					set_employer = scope:invalid_ruler
				}
			}
			add_character_flag = regent_assigned
		}
	}
}
regency.002 = {
	hidden = yes
	immediate = {
		var:regent_assigned_to = {
			remove_character_flag = regent_assigned
			trigger_event = {
				id = regency.001
				days = 1
			}
		}
	}
}