# koh Tournament decision

namespace = KOH_tourney

KOH_tourney.1 = {  # start event
	type = character_event
	title = KOH_tourney.1.t
	desc = KOH_tourney.1.desc
	
	theme = feast_activity
	left_portrait = root

	immediate = {
		save_scope_as = host
		
		capital_province = {
			save_scope_as = host_location
		}

		if = {
			limit = {
				any_courtier_or_guest = {
					is_available_healthy_adult = yes
					OR = {
						is_knight = yes
						is_landed = yes	
						prowess > average_skill_rating								
					}	
									
					NOT = { has_government = theocracy_government }
					NOT = { this = scope:host }
					
					culture = {
						has_innovation = innovation_knighthood
					}
					is_male = yes	

					scope:host = {
						NOT = {
							is_target_in_variable_list = {
								name = potential_tourney_participants
								target = prev
							}
						}
					}					
				}
			}

			every_courtier_or_guest = {	
				limit = {
					is_available_healthy_adult = yes	
					OR = {
						is_knight = yes
						is_landed = yes	
						prowess > average_skill_rating								
					}	
									
					NOT = { has_government = theocracy_government }
					NOT = { this = scope:host }
					
					culture = {
						has_innovation = innovation_knighthood
					}
					is_male = yes	
								
					scope:host = {
						NOT = {
							is_target_in_variable_list = {
								name = potential_tourney_participants
								target = prev
							}
						}
					}
				}
				scope:host = {
					add_to_variable_list = {
						name = potential_tourney_participants
						target = prev
					}
				}
			}
		}
		if = {
			limit = {
				AND = {
					highest_held_title_tier = tier_duchy
					liege = { highest_held_title_tier = tier_kingdom }
					liege = {
						any_vassal_or_below = {
							is_available_healthy_adult = yes							
							OR = {
								is_knight = yes
				
								is_landed = yes	
								prowess > average_skill_rating			
							}	
									
							NOT = { has_government = theocracy_government }
							NOT = { this = scope:host }
							
							culture = {
								has_innovation = innovation_knighthood
							}
							is_male = yes	

									
							scope:host = {
								NOT = {
									is_target_in_variable_list = {
										name = potential_tourney_participants
										target = prev
									}
								}
							}
						}
					}
				}	
			}
			liege = {
				every_vassal_or_below = {
					limit = {
						is_available_healthy_adult = yes							
						OR = {
							is_knight = yes
			
							is_landed = yes	
							prowess > average_skill_rating			
						}	
								
						NOT = { has_government = theocracy_government }
						NOT = { this = scope:host }
						
						culture = {
							has_innovation = innovation_knighthood
						}
						is_male = yes
								
						scope:host = {
							NOT = {
								is_target_in_variable_list = {
									name = potential_tourney_participants
									target = prev
								}
							}
						}
					}
					scope:host = {
						add_to_variable_list = {
							name = potential_tourney_participants
							target = prev
						}
					}
				}
			}
		}
		if = {
			limit = {
				AND = {
					highest_held_title_tier > tier_duchy
					any_vassal_or_below = {
						is_available_healthy_adult = yes							
						OR = {
							is_knight = yes

							is_landed = yes	
							prowess > average_skill_rating			
						}	

						NOT = { has_government = theocracy_government }
						NOT = { this = scope:host }
						
						culture = {
							has_innovation = innovation_knighthood
						}
						is_male = yes

						scope:host = {
							NOT = {
								is_target_in_variable_list = {
									name = potential_tourney_participants
									target = prev
								}
							}
						}
					}
				}	
			}
			every_vassal_or_below = {
				limit = {
					is_available_healthy_adult = yes							
					OR = {
						is_knight = yes
		
						is_landed = yes	
						prowess > average_skill_rating			
					}	
							
					NOT = { has_government = theocracy_government }
					NOT = { this = scope:host }
					
					culture = {
						has_innovation = innovation_knighthood
					}
					is_male = yes
								
					scope:host = {
						NOT = {
							is_target_in_variable_list = {
								name = potential_tourney_participants
								target = prev
							}
						}
					}
				}
				scope:host = {
					add_to_variable_list = {
						name = potential_tourney_participants
						target = prev
					}
				}
			}
		}
		if = {
			limit = {
				AND = {
					highest_held_title_tier = tier_duchy
					liege = {
						is_available_healthy_adult = yes							
						OR = {
							is_knight = yes
			
							is_landed = yes	
							prowess > average_skill_rating			
						}	
								
						NOT = { has_government = theocracy_government }
						NOT = { this = scope:host }
						
						culture = {
							has_innovation = innovation_knighthood
						}
						is_male = yes

						scope:host = {
							NOT = {
								is_target_in_variable_list = {
									name = potential_tourney_participants
									target = prev
								}
							}
						}
					}
				}	
			}
			liege = {
				scope:host = {
					add_to_variable_list = {
						name = potential_tourney_participants
						target = prev
					}
				}
			}
		}	
	}
	option = {
		name = KOH_tourney.1.a		

		scope:host = {
			every_in_list = {
				variable = potential_tourney_participants
				limit = {
					is_alive = yes
					NOT = { this = scope:host }
				}
				add_gold = 10
				trigger_event = {
					id = KOH_tourney.2   #invite possible participants
					days = 1
				}				
			}
		}
		
		ai_chance = {
			base = 100
		}		
	}
	after = {
		scope:host = {
			trigger_event = {
				id = KOH_tourney.3   #Start the tournament
				days = 15
			}
		}
	}
}

KOH_tourney.2 = {    #invite possible participants
	type = letter_event
	opening = KOH_tourney.2.t
	desc = KOH_tourney.2.desc
	sender = scope:host

	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = happiness 
	}
	
	trigger = {
		scope:host = {
			is_at_war = no
			liege = { is_at_war = no }
		}
	}
	
	immediate = {
		save_scope_as = possibleparticipant
	}

	option = {   #yes
		name = KOH_tourney.2.a
		

		scope:host = {
			add_to_variable_list = {
				name = tourney_participants
				target = prev
			}
		}
		add_character_flag = attending_tournament
		
		if = {
			limit = {
				scope:host = {
					has_character_flag = king_tier_tournament
				}
			}
			add_prestige = 20			
		}		
		
		else = {
			add_prestige = 10
		}	

		ai_chance = {
			base = 50
			modifier = {
				add = 25
				OR = {
					is_knight = yes
				}				
			}
			modifier = {
				add = 50
				has_trait = brave
			}
			modifier = {
				add = 25
				prowess >= average_skill_rating
			}
			modifier = {
				add = 50
				prowess >= high_skill_rating
			}			
		}		
	}
	
	option = {   #no
		name = KOH_tourney.2.b
		
		if = {
			limit = {
				scope:host = {
					has_character_flag = king_tier_tournament
				}
			}
			add_prestige = -20			
		}		
		
		else = {
			add_prestige = -10
		}
		
		ai_chance = {
			base = 50
			
			modifier = {
				add = 300
				scope:host = {
					highest_held_title_tier = tier_empire
				}
			}			
			modifier = {
				add = 50
				has_trait = craven
			}
			modifier = {
				add = 100
				has_trait_rank = {
					trait = wounded
					rank > 0
				}
			}			
			modifier = {
				add = 25
				NOT = { 
					OR = {
						is_knight = yes
					} 
				}
			}
			modifier = {
				add = 200
				AND = {
					prowess < average_skill_rating
					scope:host = {
						highest_held_title_tier = tier_empire
					}
				}				
			}			
			modifier = {
				add = 50
				prowess < average_skill_rating
			}
			modifier = {
				add = 100
				prowess <= low_skill_rating
			}
			modifier = {
				add = 300
				AND = {
					is_landed = no
					scope:host = {
						highest_held_title_tier = tier_empire
					}
				}	
			}							
		}	
	}	
}	

KOH_tourney.3 = {   #Start the tournament
	type = character_event
	title = KOH_tourney.3.t
	desc = KOH_tourney.3.desc

	theme = default
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = happiness 
	}
	
	trigger = {
		is_at_war = no
		liege = { is_at_war = no }
	}	
	
	option = {   # no war, all good, start
		name = KOH_tourney.3.a
		
		scope:host.capital_province = {
			spawn_activity = {
                type = activity_tourney
                owner = scope:host
            }
		}
		scope:host.activity = {
			save_scope_as = tourney
		}
		scope:host = {
			every_in_list = {
				variable = tourney_participants
				limit = {
					is_alive = yes
					NOT = { this = scope:host }					
				}
				# show_as_tooltip = {
				# 	scope:tourney = {
				# 		invite_character_to_activity = prev
				# 		accept_invitation_for_character = prev
				# 	}
				# }
				trigger_event = {
					id = KOH_tourney.31   #welcome all participants
				}				
			}
		}	
		
		trigger_event = {    
			id = KOH_tourney.4   #check the count of willing participants
			days = 1		
		}
		ai_chance = {
			base = 100
		}
	}	
}

KOH_tourney.31 = {   #welcome all participants
	type = character_event
	title = KOH_tourney.31.t
	desc = KOH_tourney.31.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	left_portrait = {
		character = this
		animation = happiness 
	}
	
	immediate = {
		scope:host.activity = { save_scope_as = tourney }
	}

	option = {   
		name = KOH_tourney.31.a
		
		scope:tourney = {
			invite_character_to_activity = prev
			accept_invitation_for_character = prev
		}

		ai_chance = {
			base = 100
		}		
	}		
}

KOH_tourney.4 = {     #check the count of willing participants
	type = character_event
	hidden = yes	
	
	immediate = {
		if = {
			limit = {
				scope:host = {
					has_variable_list = tourney_participants
					any_in_list = {
						variable = tourney_participants
						is_alive = yes
						NOT = { has_character_flag = removed }						
						count < 4
					}
				}			
			}
			scope:host = {	
				every_in_list = {
					variable = tourney_participants
					trigger_event = {    
						id = KOH_tourney.5		 #cancel the tourney due to lack of participants, Message send to all but the host
					}		
				}
			}	
			trigger_event = {    
				id = KOH_tourney.52  #cancel the tourney due to lack of participants, Message send to the host 
				days = 1		
			}			
		}
		
		else_if = { 
 			limit = {
				scope:host = {
					has_variable_list = tourney_participants
					OR = {
						AND = {
							has_character_flag = king_tier_tournament
							any_in_list = {
								variable = tourney_participants
								is_alive = yes
								NOT = { has_character_flag = removed }
								count > 16    # may be changed later
							}							
						}
						AND = {
							NOT = {has_character_flag = king_tier_tournament}
							any_in_list = {
								variable = tourney_participants
								is_alive = yes
								NOT = { has_character_flag = removed }
								count > 16
							}
						}
					}	
				}			
			}					

			scope:host = {
				random_in_list = {
					variable = tourney_participants
					limit = {				
						is_alive = yes
						NOT = { has_character_flag = removed }
					}	
					weight = {
						base = 100
						modifier = {
							factor = { # Prowess directly reduces chance of beeing removed
								value = 30 
								subtract = prowess
								divide = 30
								min = 0.1 
							}
						}
					}					
					trigger_event = {    
						id = KOH_tourney.8	  #randomly remove one participant
					}
				}	
			}

			trigger_event = {    
				id = KOH_tourney.4    #reiteration
				days = 1
			}
			
		}
		
		else_if = { 
 			limit = {
				scope:host = {
					has_variable_list = tourney_participants
					OR = {
						AND = {
							has_character_flag = king_tier_tournament
							any_in_list = {
								variable = tourney_participants
								is_alive = yes
								NOT = { has_character_flag = removed }
								count <= 16   # may be changed later
							}							
						}
						AND = {
							NOT = {has_character_flag = king_tier_tournament}
							any_in_list = {
								variable = tourney_participants
								is_alive = yes
								NOT = { has_character_flag = removed }
								count <= 16
							}
						}
					}					
				}			
			}					

			trigger_event = {    
				id = KOH_tourney.9	   #proceed the tourney
				days = 1
			}			 		
		}
	}
}	


KOH_tourney.5 = {    #cancel the tourney due to lack of participants, Message send to all but the host
	type = character_event
	title = KOH_tourney.5.t
	desc = KOH_tourney.5.desc

	theme = default
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = worry 
	}

	option = {
		name = KOH_tourney.5.a	
		ai_chance = {
			base = 100
		}		
	}
	after = {
		remove_character_flag = attending_tournament
		remove_character_flag = OnlyMyJousts
		remove_character_flag = removed
		remove_character_flag = lost_tournament
		remove_character_flag = jouster1
		remove_character_flag = jouster2
		remove_character_flag = winner
	}
}

KOH_tourney.52 = {    #cancel the tourney due to lack of participants, Message send to the host
	type = character_event
	title = KOH_tourney.52.t
	desc = KOH_tourney.52.desc

	theme = default
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = worry 
	}
	
	trigger = {
		is_at_war = no
		liege = { is_at_war = no }
	}	

	option = {
		name = KOH_tourney.52.a		
		
		if = {
			limit = {
				has_character_flag = king_tier_tournament
			}
			add_gold = 150
			add_prestige = -200			
		}	
		
		else = {
			add_gold = 75
			add_prestige = -100
		}	
		
		ai_chance = {
			base = 100
		}		
	}
	
	after = {
		scope:host = {
			remove_character_flag = holding_epic_tournament	
			remove_character_flag = king_tier_tournament
			clear_variable_list = tourney_participants
			clear_variable_list = potential_tourney_participants			
		}	
	}	
}

KOH_tourney.53 = {    #cancel the tourney due to death of host
	type = character_event
	title = KOH_tourney.53.t
	desc = KOH_tourney.53.desc

	theme = default
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = worry 
	}

	option = {
		name = KOH_tourney.53.a	
		ai_chance = {
			base = 100
		}		
	}
	after = {
		remove_character_flag = attending_tournament
		remove_character_flag = OnlyMyJousts
		remove_character_flag = removed
		remove_character_flag = lost_tournament
		remove_character_flag = jouster1
		remove_character_flag = jouster2
		remove_character_flag = winner		
	}
}

KOH_tourney.54 = {    #cancel the tourney due to started war - host
	type = character_event
	title = KOH_tourney.54.t
	desc = KOH_tourney.54.desc

	theme = default
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = worry 
	}

	option = {
		name = KOH_tourney.54.a	
		
		if = {
			limit = {
				has_character_flag = king_tier_tournament
			}
			add_gold = 150
			add_prestige = -200			
		}	
		
		else = {
			add_gold = 75
			add_prestige = -100
		}		
		
		ai_chance = {
			base = 100
		}		
	}
	after = {
		remove_character_flag = holding_epic_tournament	
		remove_character_flag = king_tier_tournament
		clear_variable_list = tourney_participants
		clear_variable_list = potential_tourney_participants	
	}
}

KOH_tourney.55 = {    #cancel the tourney due to started war - participants
	type = character_event
	title = KOH_tourney.55.t
	desc = KOH_tourney.55.desc

	theme = default
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = this
		animation = worry 
	}

	option = {
		name = KOH_tourney.55.a	
		ai_chance = {
			base = 100
		}		
	}
	after = {
		remove_character_flag = attending_tournament
		remove_character_flag = OnlyMyJousts
		remove_character_flag = removed
		remove_character_flag = lost_tournament
		remove_character_flag = jouster1
		remove_character_flag = jouster2
		remove_character_flag = winner		
	}
}

KOH_tourney.8 = {    #randomly remove one participant
	type = character_event
	title = KOH_tourney.8.t
	desc = KOH_tourney.8.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	left_portrait = {
		character = root
		animation = worry 
	}
	
	option = {
		name = KOH_tourney.8.a	
		add_character_flag = removed	
		
		if = {
			limit = {
				scope:host = {
					has_character_flag = king_tier_tournament
				}
			}
			add_prestige = -70			
		}		
		
		else = {
			add_prestige = -35
		}		

		ai_chance = {
			base = 0
		}		
	}
	option = {
		name = KOH_tourney.8.b	
		add_character_flag = removed
		add_character_flag = OnlyMyJousts
		
		if = {
			limit = {
				scope:host = {
					has_character_flag = king_tier_tournament
				}
			}
			add_prestige = -70			
		}		
		
		else = {
			add_prestige = -35
		}
		
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.9 = {     #proceed the tourney
	type = character_event
	title = KOH_tourney.9.t   
	desc = KOH_tourney.9.desc   

	theme = default
	override_background = {
		event_background = army_camp
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		is_at_war = no
		liege = { is_at_war = no }
	}	
		
	immediate = {
		scope:host = {
			every_in_list = {
				variable = tourney_participants
				limit = {
					is_alive = yes
					NOT = { has_character_flag = removed }
				}
				trigger_event = {
					id = KOH_tourney.6   #welcome all remaining participants
				}				
			}
		}		
	}
	option = {
		name = KOH_tourney.9.a	 
		ai_chance = {
			base = 100
		}		
	}	
	after = {
		trigger_event = {    
			id = KOH_tourney.7    #generate the next matchup
			days = 1
		}	
	}	
}	

KOH_tourney.7 = {	  #generate the next matchup
	type = character_event
	hidden = yes
	
	trigger = {
		is_at_war = no
		liege = { is_at_war = no }
	}	
	
	immediate = {
		
		if = {
			limit = {
				scope:host = {
					has_variable_list = tourney_participants
					any_in_list = {
						variable = tourney_participants
						is_alive = yes
						NOT = { has_character_flag = removed }	
						NOT = { has_character_flag = lost_tournament }
						NOT = { this = scope:host }						
						count > 1
					}
				}			
			}
			scope:host = {
				random_in_list = {
					variable = tourney_participants
					limit = {				
						is_alive = yes
						NOT = { has_character_flag = removed }
						NOT = { has_character_flag = lost_tournament }
						NOT = { this = scope:host }
					}

					weight = {   #results in bracket elimination, independent from the number of participants
						base = 1000000
						modifier = {
							factor = { 
								value = 1 
								divide = var:bracket 
							}
						}
					}
					
					add_character_flag = jouster1
					save_scope_as = jouster1
				}	
			}
			scope:host = {
				random_in_list = {
					variable = tourney_participants
					limit = {				
						is_alive = yes
						NOT = { has_character_flag = removed }
						NOT = { has_character_flag = lost_tournament }
						NOT = { has_character_flag = jouster1 }
						NOT = { this = scope:host }
					}

					weight = {   #results in bracket elimination, independent from the number of participants
						base = 1000000
						modifier = {
							factor = { 
								value = 1 
								divide = var:bracket 
							}
						}
					}
					
					add_character_flag = jouster2
					save_scope_as = jouster2
				}	
			}

			scope:host = {
				every_in_list = {
					variable = tourney_participants
					limit = {
						is_alive = yes
						OR = {
							NOT = { has_character_flag = OnlyMyJousts }
							scope:jouster1 = this
							scope:jouster2 = this
						}
					}
					trigger_event = {
						id = KOH_tourney.10   #inform all participants about the next matchup
					}				
				}
			}

			trigger_event = {
				id = KOH_tourney.11   #inform the host about the next matchup and perform the joust. 
				days = 1
			}		
		}
		
		else_if = {
			limit = {
				scope:host = {
					has_variable_list = tourney_participants
					any_in_list = {
						variable = tourney_participants
						is_alive = yes
						NOT = { has_character_flag = removed }	
						NOT = { has_character_flag = lost_tournament }
						NOT = { this = scope:host }						
						count = 1
					}
				}			
			}

			scope:host = {
				every_in_list = {
					variable = tourney_participants
					limit = {
						NOT = { has_character_flag = removed }	
						NOT = { has_character_flag = lost_tournament }
						NOT = { this = scope:host }
						is_alive = yes						
					}
					add_character_flag = winner
					save_scope_as = winner
				}
			}
			
			scope:loser = {
				trigger_event = {
					id = KOH_tourney.151   #inform the second place and handout prize money + prestige
				}				
			}				
			
			scope:host = {
				every_in_list = {
					variable = tourney_participants
					limit = {
						is_alive = yes
						NOT = { has_character_flag = winner }
					}
					trigger_event = {
						id = KOH_tourney.14   #inform all participantgs but the winner about the winner of the tournament
					}				
				}
			}

			scope:winner = {
				trigger_event = {
					id = KOH_tourney.15   #inform the winner and handout prize money + prestige
				}				
			}
			
			trigger_event = {
				id = KOH_tourney.16   #inform the host about the winner of the tournament and finish
				days = 1
			}
		}
	}	
}

KOH_tourney.6 = {     #welcome all remaining participants
	type = character_event
	title = KOH_tourney.6.t
	desc = KOH_tourney.6.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	immediate = {
		set_variable = {
			name = bracket
			value = 1
		}	
	}
	
	option = {
		name = KOH_tourney.6.a	
		ai_chance = {
			base = 0
		}		
	}
	option = {
		name = KOH_tourney.6.b	
		add_character_flag = OnlyMyJousts
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.10 = {   #inform all participants about the next matchup
	type = character_event
	title = KOH_tourney.10.t
	desc = KOH_tourney.10.desc

	theme = physical_health
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = scope:jouster1
		animation = happiness
	}
	right_portrait = {
		character = scope:jouster2
		animation = happiness
	}	
	
	option = {
		name = KOH_tourney.10.a
		ai_chance = {
			base = 100
		}		
	}
}

KOH_tourney.14 = {    #inform all participants but the winner about the winner of the tournament
	type = character_event
	title = KOH_tourney.14.t
	desc = KOH_tourney.14.desc

	theme = feast_activity
	#override_background = {
	#	event_background = army_camp
	#}
	
	left_portrait = {
		character = scope:winner
		animation = happiness
	}
	
	immediate = {
		set_variable = {
			name = bracket
			value = 1
		}	
	}

	option = {
		name = KOH_tourney.14.a	
		remove_character_flag = attending_tournament
		remove_character_flag = OnlyMyJousts
		remove_character_flag = removed
		remove_character_flag = lost_tournament
		
		add_prestige = 10

		ai_chance = {
			base = 100
		}		
	}
}

KOH_tourney.15 = {     #inform the winner and handout prize money + prestige
	type = character_event
	title = KOH_tourney.15.t
	desc = KOH_tourney.15.desc

	theme = feast_activity
	#override_background = {
	#	event_background = army_camp
	#}
	
	left_portrait = {
		character = scope:winner
		animation = happiness
	}
	
	immediate = {
		set_variable = {
			name = bracket
			value = 1
		}	
	}	
	
	option = {
		name = KOH_tourney.15.a	
		
		create_character_memory = {
			type = KOH_tournament_winner 
			participants = {
				TourneyHost = scope:host
			}
		}		
		
		if = {
			limit = {
				scope:host = {
					has_character_flag = king_tier_tournament
				}
			}
			add_gold = 250
			add_prestige = 1200			
		}
		
		else = {
			add_gold = 100
			add_prestige = 300
		}	
		
		add_character_modifier = {
			modifier = Tourney_Winner
			years = 5
		}		
		remove_character_flag = attending_tournament
		remove_character_flag = OnlyMyJousts
		remove_character_flag = removed
		remove_character_flag = lost_tournament
		remove_character_flag = jouster1
		remove_character_flag = jouster2		
		ai_chance = {
			base = 100
		}		
	}
	after = {
		remove_character_flag = attending_tournament
		remove_character_flag = OnlyMyJousts
		remove_character_flag = removed
		remove_character_flag = lost_tournament
		remove_character_flag = jouster1
		remove_character_flag = jouster2		
	}
}

KOH_tourney.151 = {     #inform the second place and handout prize money + prestige
	type = character_event
	title = KOH_tourney.151.t
	desc = KOH_tourney.151.desc

	theme = feast_activity
	#override_background = {
	#	event_background = army_camp
	#}
	
	left_portrait = {
		character = scope:loser
		animation = happiness
	}
	
	immediate = {
		set_variable = {
			name = bracket
			value = 1
		}	
	}	
	
	option = {
		name = KOH_tourney.151.a	
		
		create_character_memory = {
			type = koh_tournament_second_place 
			participants = {
				TourneyHost = scope:host
			}
		}		
		
		if = {
			limit = {
				scope:host = {
					has_character_flag = king_tier_tournament
				}
			}
			add_gold = 50
			add_prestige = 150			
		}
		
		else = {
			add_gold = 25
			add_prestige = 75
		}	
		
		add_character_modifier = {
			modifier = Tourney_Second_Place
			years = 5
		}		
		
		ai_chance = {
			base = 100
		}		
	}
}

KOH_tourney.16 = {    #inform the host about the winner of the tournament and finish
	type = character_event
	title = KOH_tourney.16.t
	desc = KOH_tourney.16.desc

	theme = feast_activity
	#override_background = {
	#	event_background = army_camp
	#}
	
	left_portrait = {
		character = scope:winner
		animation = happiness
		outfit_tags = { military_outfit } 
	}
	
	trigger = {
		is_at_war = no
		liege = { is_at_war = no }
	}	
	
	option = {
		name = KOH_tourney.16.a	
		scope:winner = {
			remove_character_flag = winner
		}
		show_as_tooltip = {
			scope:winner = {
				if = {
					limit = {
						scope:host = {
							has_character_flag = king_tier_tournament
						}
					}
					add_gold = 250
					add_prestige = 1200			
				}
				
				else = {
					add_gold = 100
					add_prestige = 300
				}
				add_character_modifier = {
					modifier = Tourney_Winner
					years = 5
				}	
			}	
		}
		ai_chance = {
			base = 100
		}		
	}
	
	after = {
		scope:host = {
			remove_character_flag = holding_epic_tournament
			remove_character_flag = king_tier_tournament			
			clear_variable_list = tourney_participants
			clear_variable_list = potential_tourney_participants	
		}
	}	
}

KOH_tourney.11 = {    #inform the host about the next matchup and perform the joust. 
	type = character_event
	title = KOH_tourney.11.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:host = {
						NOT = {
							has_character_flag = tourney_round_one
						}
					}
				}
				desc = KOH_tourney.11.desc.tourney_round_one
			}
			triggered_desc = {
				trigger = {
					scope:host = {
						has_character_flag = tourney_round_one
						NOT = {
							has_character_flag = tourney_round_two
						}
					}
				}
				desc = KOH_tourney.11.desc.tourney_round_two
			}
			triggered_desc = {
				trigger = {
					scope:host = {
						has_character_flag = tourney_round_one
						has_character_flag = tourney_round_two
						NOT = {
							has_character_flag = tourney_round_three
						}
					}
				}
				desc = KOH_tourney.11.desc.tourney_round_three
			}
			triggered_desc = {
				trigger = {
					scope:host = {
						has_character_flag = tourney_round_one
						has_character_flag = tourney_round_two
						has_character_flag = tourney_round_three
						NOT = {
							has_character_flag = tourney_round_four
						}
					}
				}
				desc = KOH_tourney.11.desc.tourney_round_four
			}
			triggered_desc = {
				trigger = {
					scope:host = {
						has_character_flag = tourney_round_one
						has_character_flag = tourney_round_two
						has_character_flag = tourney_round_three
						has_character_flag = tourney_round_four
						NOT = {
							has_character_flag = tourney_round_five
						}
					}
				}
				desc = KOH_tourney.11.desc.tourney_round_five
			}
			desc = KOH_tourney.11.desc
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_character_flag = tourney_round_one
				}
			}
			add_character_flag = tourney_round_one
		}
		else_if = {
			limit = {
				has_character_flag = tourney_round_one
				NOT = {
					has_character_flag = tourney_round_two
				}
			}
			add_character_flag = tourney_round_two
		}
		else_if = {
			limit = {
				has_character_flag = tourney_round_one
				has_character_flag = tourney_round_two
				NOT = {
					has_character_flag = tourney_round_three
				}
			}
			add_character_flag = tourney_round_three
		}
		else_if = {
			limit = {
				has_character_flag = tourney_round_one
				has_character_flag = tourney_round_two
				has_character_flag = tourney_round_three
				NOT = {
					has_character_flag = tourney_round_four
				}
			}
			add_character_flag = tourney_round_four
		}
		else = {
			limit = {
				has_character_flag = tourney_round_one
				has_character_flag = tourney_round_two
				has_character_flag = tourney_round_three
				has_character_flag = tourney_round_four
				NOT = {
					has_character_flag = tourney_round_five
				}
			}
			add_character_flag = tourney_round_five
		}
	}

	theme = physical_health
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = scope:jouster1
		animation = happiness
	}
	right_portrait = {
		character = scope:jouster2
		animation = happiness
	}

	trigger = {
		is_at_war = no
		liege = { is_at_war = no }
	}	
	
	option = {
		name = KOH_tourney.11.a	
		
		hidden_effect = {
			trigger_event = {     # recursive master event
				id = KOH_tourney.121   # begin joust calculation
			}
		}
		ai_chance = {
			base = 100
		}		
	}
}

KOH_tourney.111 = {    #you were wounded
	type = character_event
	title = KOH_tourney.111.t
	desc = KOH_tourney.111.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = worry
	}

	option = {
		name = KOH_tourney.111.a	
		increase_wounds_effect = { REASON = tourney_joust }
		
		ai_chance = {
			base = 100
		}		
	}
}

KOH_tourney.112 = {    #you were killed
	type = character_event
	title = KOH_tourney.112.t
	desc = KOH_tourney.112.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = worry
	}

	option = {
		name = KOH_tourney.112.a	
		death = { death_reason = death_jousting_tournament }
		
		ai_chance = {
			base = 100
		}		
	}
}

KOH_tourney.12 = {    #inform participants about the match result
	type = character_event
	title = KOH_tourney.12.t
	desc = KOH_tourney.12.desc

	theme = recovery
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = scope:victor
		animation = happiness 
	}
	right_portrait = {
		character = scope:loser
		animation = pain 
	}	
	
	trigger = {
		scope:host = {
			is_at_war = no
			liege = { is_at_war = no }
		}	
	}	
	
	option = {
		name = KOH_tourney.12.a
		if = {
			limit = {
				this = scope:victor
			}
			if = {
				limit = {
					scope:host = {
						has_character_flag = king_tier_tournament
					}
				}
				add_prestige = 20				
			}		
			
			else = {
				add_prestige = 10
			}			
		}
		if = {
			limit = {
				this = scope:loser
			}
			if = {
				limit = {
					scope:host = {
						has_character_flag = king_tier_tournament
					}
					is_alive = yes
				}
				add_prestige = -20				
			}		
			
			else_if = {
				limit = {
					is_alive = yes
				}
				add_prestige = -10
			}
		}		
		ai_chance = {
			base = 100
		}		
	}
}
# MADE INTO TOAST
# KOH_tourney.13 = {    #inform host about the match result
# 	type = character_event
# 	title = KOH_tourney.13.t
# 	desc = KOH_tourney.13.desc

# 	theme = recovery
# 	override_background = {
# 		event_background = army_camp
# 	}
	
# 	left_portrait = {
# 		character = scope:victor
# 		animation = happiness 
# 	}
# 	right_portrait = {
# 		character = scope:loser
# 		animation = pain 
# 	}

# 	trigger = {
# 		is_at_war = no
# 		liege = { is_at_war = no }
# 	}	
	
# 	option = {
# 		name = KOH_tourney.13.a
# 		ai_chance = {
# 			base = 100
# 		}		
# 	}
		
# 	after = {
# 		trigger_event = {    
# 			id = KOH_tourney.7    #reiterate matchups
# 			days = 1
# 		}		
# 	}	
# }

KOH_tourney.121 = {     # recursive joust master event
	type = character_event
	hidden = yes
	
	immediate = {
		random_list = {
			1 = {  # jouster1 hits
				modifier = {
					factor = { 
						value = 1 
						add = scope:jouster1.prowess
					}
				}
					
				scope:jouster1 = {
					save_scope_as = opponent				
					trigger_event = {    
						id = KOH_tourney.122    # jouster1 hit!
					}						
				}
					
				scope:jouster2 = {
					trigger_event = {    
						id = KOH_tourney.123    # jouster2 was hit
					}
				}			
			}
			1 = {  # jouster2 hits
				modifier = {
					factor = { 
						value = 1 
						add = scope:jouster2.prowess
					}
				}
					
				scope:jouster2 = {
					save_scope_as = opponent				
					trigger_event = {    
						id = KOH_tourney.122    # jouster2 hit!
					}						
				}					
					
				scope:jouster1 = {
					trigger_event = {    
						id = KOH_tourney.123    # jouster1 was hit
					}					
				}					
			}			
		}
	}
}

KOH_tourney.122 = {    # You hit!
	type = character_event
	title = KOH_tourney.122.t
	desc = KOH_tourney.122.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = happiness 
	}	
	
	option = {
		name = KOH_tourney.122.a
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.123 = {    # You were hit
	type = character_event
	title = KOH_tourney.123.t
	desc = KOH_tourney.123.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = worry 
	}	
	
	option = {
		name = KOH_tourney.123.a
		trigger_event = {    
			id = KOH_tourney.124    # Can you stay mounted?
		}		
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.124 = {    # Can you stay mounted?
	type = character_event
	hidden = yes	
	
	immediate = {
		random_list = {
			100 = {  # you kept balance
				modifier = {
					factor = { # Prowess directly helps to stay mounted when hit
						value = 0 
						add = this.prowess
						add = this.prowess
						divide = 100
						max = 0.5 
					}
				}
					
				scope:opponent = {
					trigger_event = {    
						id = KOH_tourney.127    # inform opponent
					}
				}
				
				trigger_event = {    
					id = KOH_tourney.125     # reiteration
				}
			}
			100 = {  # you lost
				modifier = {
					factor = { # Prowess directly helps to stay mounted when hit
						value = 100 
						subtract = this.prowess
						subtract = this.prowess
						divide = 100
						min = 0.5 
					}
				}
					
				scope:opponent = {
					trigger_event = {    
						id = KOH_tourney.128    # inform opponent
					}
				}
				
				trigger_event = {    
					id = KOH_tourney.126    # You lost
				}				
			}			
		}		
	}	
}

KOH_tourney.125 = {     # reiteration
	type = character_event
	title = KOH_tourney.125.t
	desc = KOH_tourney.125.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = happiness 
	}	
	
	option = {
		name = KOH_tourney.125.a
		trigger_event = {    
			id = KOH_tourney.121    # reiteration
		}		
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.126 = {     
	type = character_event
	title = KOH_tourney.126.t
	desc = KOH_tourney.126.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = pain 
	}		
	
	option = {
		name = KOH_tourney.126.a
		hidden_effect = {
			add_character_flag = lost_tournament
			save_scope_as = loser
						
			random_list = {
				8 = {  # nothing bad happened 
					modifier = {
						add = this.prowess
					}
				}
				4 = {  # wounded: 30.8% chance with prowess 0, 17.4% chance with prowess 10, 12.1% chance with prowess 20
					trigger_event = {
						id = KOH_tourney.111   #wounded
					}
					#increase_wounds_effect = { REASON = tourney_joust }
				}
				1 = {  # killed: 7.7% chance with prowess 0, 4.3% chance with prowess 10, 3.0% chance with prowess 20
					trigger_event = {
						id = KOH_tourney.112   #dead
					}
					scope:host = {
						send_interface_message = {
							type = msg_border_raid_bad
							title = KOH_tourney.112.t.host.t
							desc =  KOH_tourney.112.tt.host
							left_icon = scope:loser
						}
					}
					#death = { death_reason = death_jousting_tournament }
				}
			}					
				
					
			scope:opponent = {
				save_scope_as = victor
				change_variable = {
					name = bracket
					multiply = 1000
				}						
			}

			scope:jouster1 = {
				if = {
					limit = {
						is_alive = yes
					}
					remove_character_flag = jouster1				
				}
			}
			
			scope:jouster2 = {
				if = {
					limit = {
						is_alive = yes
					}
					remove_character_flag = jouster2				
				}		
			}
			
			scope:host = {
				every_in_list = {
					variable = tourney_participants
					limit = {
						is_alive = yes
						NOT = { this = scope:host }
						OR = {
							NOT = { has_character_flag = OnlyMyJousts }
							scope:jouster1 = this
							scope:jouster2 = this
						}
					}
					# trigger_event = { #MAKE TOAST
					# 	id = KOH_tourney.12   #inform participants about the match result
					# 	days = 1
					# }				
				}
			}		
		 
			scope:host = { #MAKE TOAST
				send_interface_toast = {
					type = event_toast_effect_good
					title = KOH_tourney.13.t
					custom_tooltip = KOH_tourney.13.desc
					left_icon = scope:jouster1
					right_icon = scope:jouster2
				}
				trigger_event = {    
					id = KOH_tourney.7    #reiterate matchups
					days = 1
				}
			}
		}	
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.127 = {     # inform opponent: Survived
	type = character_event
	title = KOH_tourney.127.t
	desc = KOH_tourney.127.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = worry 
	}	
	
	option = {
		name = KOH_tourney.127.a
		
		ai_chance = {
			base = 100
		}		
	}	
}

KOH_tourney.128 = {     # inform opponent: Beaten
	type = character_event
	title = KOH_tourney.128.t
	desc = KOH_tourney.128.desc

	theme = default
	override_background = {
		event_background = army_camp
	}
	
	left_portrait = {
		character = this
		animation = happiness 
	}	
	
	option = {
		name = KOH_tourney.128.a
		
		ai_chance = {
			base = 100
		}		
	}	
}
